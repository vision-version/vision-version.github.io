diff --git a/./github_diff/CVE-2019-10241/oldfiles/Resource.java b/./github_diff/CVE-2019-10241/newfiles/Resource.java
index 538aea6..b48b82f 100644
--- a/./github_diff/CVE-2019-10241/oldfiles/Resource.java
+++ b/./github_diff/CVE-2019-10241/newfiles/Resource.java
@@ -13,14 +13,19 @@ import java.text.DateFormat;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Date;
+import java.util.List;
 import org.eclipse.jetty.util.B64Code;
 import org.eclipse.jetty.util.IO;
 import org.eclipse.jetty.util.Loader;
+import org.eclipse.jetty.util.MultiMap;
 import org.eclipse.jetty.util.StringUtil;
 import org.eclipse.jetty.util.URIUtil;
+import org.eclipse.jetty.util.UrlEncoded;
 import org.eclipse.jetty.util.log.Log;
 import org.eclipse.jetty.util.log.Logger;
+import static java.nio.charset.StandardCharsets.UTF_8;
 public abstract class Resource implements ResourceFactory, Closeable {
     private static final Logger LOG = Log.getLogger(Resource.class);
     public static boolean __defaultUseCaches = true;
@@ -230,49 +235,185 @@ public abstract class Resource implements ResourceFactory, Closeable {
     }
     
     public String getListHTML(String base, boolean parent) throws IOException {
+        return getListHTML(base, parent, null);
+    }
+    
+    public String getListHTML(String base, boolean parent, String query) throws IOException {
         base=URIUtil.canonicalPath(base);
         if (base==null || !isDirectory())
             return null;
         String[] ls = list();
-        if (ls==null)
+        if (ls == null){
             return null;
+        }
+        
+        boolean sortOrderAscending = true;
+        String sortColumn = "N"; 
+        if (query != null){
+            MultiMap<String> params = new MultiMap<>();
+            byte[] rawQuery = query.getBytes(UTF_8);
+            UrlEncoded.decodeUtf8To(rawQuery, 0, query.length(), params);
+            String paramO = params.getString("O");
+            String paramC = params.getString("C");
+            if (StringUtil.isNotBlank(paramO)){
+                if (paramO.equals("A")){
+                    sortOrderAscending = true;
+                }
+                
+                else if (paramO.equals("D")){
+                    sortOrderAscending = false;
+                }
+                
+            }
+            
+            if (StringUtil.isNotBlank(paramC)){
+                if (paramC.equals("N") || paramC.equals("M") || paramC.equals("S")){
+                    sortColumn = paramC;
+                }
+                
+            }
+            
+        }
+        
+        List<Resource> items = new ArrayList<>();
+        for (int i=0 ; i< ls.length ; i++){
+            Resource item = addPath(ls[i]);
+            items.add(item);
+        }
+        
+        if (sortColumn.equals("M")){
+            Collections.sort(items, ResourceCollators.byLastModified(sortOrderAscending));
+        }
+        
+        else if (sortColumn.equals("S")){
+            Collections.sort(items, ResourceCollators.bySize(sortOrderAscending));
+        }
+        
+        else{
+            Collections.sort(items, ResourceCollators.byName(sortOrderAscending));
+        }
+        
         Arrays.sort(ls);
         String decodedBase = URIUtil.decodePath(base);
         String title = "Directory: " + deTag(decodedBase);
         StringBuilder buf = new StringBuilder(4096);
-        buf.append("<HTML><HEAD>");
-        buf.append("<LINK HREF=\"").append("jetty-dir.css").append("\" REL=\"stylesheet\" TYPE=\"text/css\"/><TITLE>");
+        buf.append("<!DOCTYPE html>\n");
+        buf.append("<html lang=\"en\">\n");
+        buf.append("<head>\n");
+        buf.append("<meta charset=\"utf-8\">\n");
+        buf.append("<link href=\"jetty-dir.css\" rel=\"stylesheet\" />\n");
+        buf.append("<title>");
         buf.append(title);
-        buf.append("</TITLE></HEAD><BODY>\n<H1>");
-        buf.append(title);
-        buf.append("</H1>\n<TABLE BORDER=0>\n");
-        if (parent){
-            buf.append("<TR><TD><A HREF=\"");
-            buf.append(URIUtil.addPaths(base,"../"));
-            buf.append("\">Parent Directory</A></TD><TD></TD><TD></TD></TR>\n");
+        buf.append("</title>\n");
+        buf.append("</head>\n");
+        buf.append("<body>\n");
+        buf.append("<h1 class=\"title\">").append(title).append("</h1>\n");
+        final String ARROW_DOWN = "&nbsp; &#8681;";
+        final String ARROW_UP = "&nbsp; &#8679;";
+        String arrow;
+        String order;
+        buf.append("<table class=\"listing\">\n");
+        buf.append("<thead>\n");
+        arrow = "";
+        order = "A";
+        if (sortColumn.equals("N")){
+            if(sortOrderAscending) {
+                order = "D";
+                arrow = ARROW_UP;
+            }
+            
+            else{
+                order = "A";
+                arrow = ARROW_DOWN;
+            }
+            
+        }
+        
+        buf.append("<tr><th class=\"name\"><a href=\"?C=N&O=").append(order).append("\">");
+        buf.append("Name").append(arrow);
+        buf.append("</a></th>");
+        arrow = "";
+        order = "A";
+        if (sortColumn.equals("M")){
+            if(sortOrderAscending) {
+                order = "D";
+                arrow = ARROW_UP;
+            }
+            
+            else{
+                order = "A";
+                arrow = ARROW_DOWN;
+            }
+            
+        }
+        
+        buf.append("<th class=\"lastmodified\"><a href=\"?C=M&O=").append(order).append("\">");
+        buf.append("Last Modified").append(arrow);
+        buf.append("</a></th>");
+        arrow = "";
+        order = "A";
+        if (sortColumn.equals("S")){
+            if(sortOrderAscending) {
+                order = "D";
+                arrow = ARROW_UP;
+            }
+            
+            else{
+                order = "A";
+                arrow = ARROW_DOWN;
+            }
+            
         }
         
+        buf.append("<th class=\"size\"><a href=\"?C=S&O=").append(order).append("\">");
+        buf.append("Size").append(arrow);
+        buf.append("</a></th></tr>\n");
+        buf.append("</thead>\n");
+        buf.append("<tbody>\n");
         String encodedBase = hrefEncodeURI(base);
+        if (parent){
+            buf.append("<tr><td class=\"name\"><a href=\"");
+            buf.append(URIUtil.addPaths(encodedBase,"../"));
+            buf.append("\">Parent Directory</a></td>");
+            buf.append("<td class=\"lastmodified\">-</td>");
+            buf.append("<td>-</td>");
+            buf.append("</tr>\n");
+        }
+        
         DateFormat dfmt=DateFormat.getDateTimeInstance(DateFormat.MEDIUM, DateFormat.MEDIUM);
-        for (int i=0 ; i< ls.length ; i++){
-            Resource item = addPath(ls[i]);
-            buf.append("\n<TR><TD><A HREF=\"");
-            String path=URIUtil.addPaths(encodedBase,URIUtil.encodePath(ls[i]));
+        for (Resource item: items){
+            String name = item.getName();
+            int slashIdx = name.lastIndexOf('/');
+            if (slashIdx != -1){
+                name = name.substring(slashIdx + 1);
+            }
+            
+            buf.append("<tr><td class=\"name\"><a href=\"");
+            String path=URIUtil.addPaths(encodedBase,URIUtil.encodePath(name));
             buf.append(path);
-            if (item.isDirectory() && !path.endsWith("/"))
+            if (item.isDirectory() && !path.endsWith("/")){
                 buf.append(URIUtil.SLASH);
+            }
+            
             buf.append("\">");
-            buf.append(deTag(ls[i]));
+            buf.append(deTag(name));
+            if (item.isDirectory() && !path.endsWith("/")){
+                buf.append(URIUtil.SLASH);
+            }
+            
             buf.append("&nbsp;");
-            buf.append("</A></TD><TD ALIGN=right>");
-            buf.append(item.length());
-            buf.append(" bytes&nbsp;</TD><TD>");
+            buf.append("</a></td>");
+            buf.append("<td class=\"lastmodified\">");
             buf.append(dfmt.format(new Date(item.lastModified())));
-            buf.append("</TD></TR>");
+            buf.append("</td>");
+            buf.append("<td class=\"size\">");
+            buf.append(String.format("%,d", item.length()));
+            buf.append(" bytes&nbsp;</td></tr>\n");
         }
         
-        buf.append("</TABLE>\n");
-        buf.append("</BODY></HTML>\n");
+        buf.append("</tbody>\n");
+        buf.append("</table>\n");
+        buf.append("</body></html>\n");
         return buf.toString();
     }
     
