diff --git a/./github_diff/CVE-2018-1263/oldfiles/UnZipTransformer.java b/./github_diff/CVE-2018-1263/newfiles/UnZipTransformer.java
index a9d12c3..4ba264f 100644
--- a/./github_diff/CVE-2018-1263/oldfiles/UnZipTransformer.java
+++ b/./github_diff/CVE-2018-1263/newfiles/UnZipTransformer.java
@@ -69,13 +69,7 @@ public class UnZipTransformer extends AbstractZipTransformer {
 						}
 						
 						if (ZipResultType.FILE.equals(zipResultType)) {
-							final File tempDir = new File(workDirectory, message.getHeaders().getId().toString());
-							tempDir.mkdirs(); 
-							final File destinationFile = new File(tempDir, zipEntryName);
-							 if (!destinationFile.getCanonicalPath().startsWith(workDirectory.getCanonicalPath())) {
-								throw new ZipException("The file " + zipEntryName + " is trying to leave the target output directory of " + workDirectory);
-							}
-							
+							final File destinationFile = checkPath(message, zipEntryName);
 							if (zipEntry.isDirectory()) {
 								destinationFile.mkdirs(); 
 							}
@@ -89,6 +83,7 @@ public class UnZipTransformer extends AbstractZipTransformer {
 						
 						else if (ZipResultType.BYTE_ARRAY.equals(zipResultType)) {
 							if (!zipEntry.isDirectory()) {
+								checkPath(message, zipEntryName);
 								byte[] data = IOUtils.toByteArray(zipEntryInputStream);
 								uncompressedData.put(zipEntryName, data);
 							}
@@ -101,6 +96,17 @@ public class UnZipTransformer extends AbstractZipTransformer {
 						
 					}
 					
+					public File checkPath(final Message<?> message, final String zipEntryName) throws IOException {
+						final File tempDir = new File(workDirectory, message.getHeaders().getId().toString());
+						tempDir.mkdirs(); 
+						final File destinationFile = new File(tempDir, zipEntryName);
+						 if (!destinationFile.getCanonicalPath().startsWith(workDirectory.getCanonicalPath())) {
+							throw new ZipException("The file " + zipEntryName + " is trying to leave the target output directory of " + workDirectory);
+						}
+						
+						return destinationFile;
+					}
+					
 				}
 				
 );
