diff --git a/./github_diff/CVE-2014-0225/oldfiles/Jaxb2RootElementHttpMessageConverter.java b/./github_diff/CVE-2014-0225/newfiles/Jaxb2RootElementHttpMessageConverter.java
index 2497fec..dd5fffd 100644
--- a/./github_diff/CVE-2014-0225/oldfiles/Jaxb2RootElementHttpMessageConverter.java
+++ b/./github_diff/CVE-2014-0225/newfiles/Jaxb2RootElementHttpMessageConverter.java
@@ -1,5 +1,6 @@
 package org.springframework.http.converter.xml;
 import java.io.IOException;
+import java.io.StringReader;
 import javax.xml.bind.JAXBElement;
 import javax.xml.bind.JAXBException;
 import javax.xml.bind.MarshalException;
@@ -20,6 +21,7 @@ import org.springframework.http.converter.HttpMessageConversionException;
 import org.springframework.http.converter.HttpMessageNotReadableException;
 import org.springframework.http.converter.HttpMessageNotWritableException;
 import org.springframework.util.ClassUtils;
+import org.xml.sax.EntityResolver;
 import org.xml.sax.InputSource;
 import org.xml.sax.SAXException;
 import org.xml.sax.XMLReader;
@@ -30,6 +32,10 @@ public class Jaxb2RootElementHttpMessageConverter extends AbstractJaxb2HttpMessa
 		this.processExternalEntities = processExternalEntities;
 	}
 	
+	public boolean isProcessExternalEntities() {
+		return this.processExternalEntities;
+	}
+	
 	@Override
 	public boolean canRead(Class<?> clazz, MediaType mediaType) {
 		return (clazz.isAnnotationPresent(XmlRootElement.class) || clazz.isAnnotationPresent(XmlType.class)) && canRead(mediaType);
@@ -78,7 +84,11 @@ public class Jaxb2RootElementHttpMessageConverter extends AbstractJaxb2HttpMessa
 			try {
 				XMLReader xmlReader = XMLReaderFactory.createXMLReader();
 				String featureName = "http://xml.org/sax/features/external-general-entities";
-				xmlReader.setFeature(featureName, this.processExternalEntities);
+				xmlReader.setFeature(featureName, isProcessExternalEntities());
+				if (!isProcessExternalEntities()) {
+					xmlReader.setEntityResolver(NO_OP_ENTITY_RESOLVER);
+				}
+				
 				return new SAXSource(xmlReader, inputSource);
 			}
 			
@@ -121,5 +131,12 @@ public class Jaxb2RootElementHttpMessageConverter extends AbstractJaxb2HttpMessa
 		
 	}
 	
+	private static final EntityResolver NO_OP_ENTITY_RESOLVER = new EntityResolver() {
+		@Override
+		public InputSource resolveEntity(String publicId, String systemId) {
+			return new InputSource(new StringReader(""));
+		}
+		
+	};
 }
 
