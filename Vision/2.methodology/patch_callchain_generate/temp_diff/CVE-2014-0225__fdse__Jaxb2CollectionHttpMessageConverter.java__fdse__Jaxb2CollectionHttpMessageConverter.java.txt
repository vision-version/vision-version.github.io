diff --git a/./github_diff/CVE-2014-0225/oldfiles/Jaxb2CollectionHttpMessageConverter.java b/./github_diff/CVE-2014-0225/newfiles/Jaxb2CollectionHttpMessageConverter.java
index 0dea82b..e25e4e4 100644
--- a/./github_diff/CVE-2014-0225/oldfiles/Jaxb2CollectionHttpMessageConverter.java
+++ b/./github_diff/CVE-2014-0225/newfiles/Jaxb2CollectionHttpMessageConverter.java
@@ -1,4 +1,5 @@
 package org.springframework.http.converter.xml;
+import java.io.ByteArrayInputStream;
 import java.io.IOException;
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
@@ -14,6 +15,7 @@ import javax.xml.bind.Unmarshaller;
 import javax.xml.bind.annotation.XmlRootElement;
 import javax.xml.bind.annotation.XmlType;
 import javax.xml.stream.XMLInputFactory;
+import javax.xml.stream.XMLResolver;
 import javax.xml.stream.XMLStreamException;
 import javax.xml.stream.XMLStreamReader;
 import javax.xml.transform.Result;
@@ -177,8 +179,16 @@ public class Jaxb2CollectionHttpMessageConverter<T extends Collection> extends A
 	 protected XMLInputFactory createXmlInputFactory() {
 		XMLInputFactory inputFactory = XMLInputFactory.newInstance();
 		inputFactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
+		inputFactory.setXMLResolver(NO_OP_XML_RESOLVER);
 		return inputFactory;
 	}
 	
+	private static final XMLResolver NO_OP_XML_RESOLVER = new XMLResolver() {
+		@Override
+		public Object resolveEntity(String publicID, String systemID, String base, String ns) {
+			return new ByteArrayInputStream(new byte[0]);
+		}
+		
+	};
 }
 
