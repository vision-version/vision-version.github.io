diff --git a/./github_diff/CVE-2022-42004/oldfiles/BeanDeserializer.java b/./github_diff/CVE-2022-42004/newfiles/BeanDeserializer.java
index 5fca288..a288ba1 100644
--- a/./github_diff/CVE-2022-42004/oldfiles/BeanDeserializer.java
+++ b/./github_diff/CVE-2022-42004/newfiles/BeanDeserializer.java
@@ -6,6 +6,7 @@ import com.fasterxml.jackson.databind.*;
 import com.fasterxml.jackson.databind.cfg.CoercionAction;
 import com.fasterxml.jackson.databind.deser.impl.*;
 import com.fasterxml.jackson.databind.deser.impl.ReadableObjectId.Referring;
+import com.fasterxml.jackson.databind.util.ClassUtil;
 import com.fasterxml.jackson.databind.util.IgnorePropertiesUtil;
 import com.fasterxml.jackson.databind.util.NameTransformer;
 import com.fasterxml.jackson.databind.util.TokenBuffer;
@@ -498,6 +499,11 @@ public class BeanDeserializer extends BeanDeserializerBase implements java.io.Se
             }
             
             if (unwrap) {
+                if (p.nextToken() == JsonToken.START_ARRAY) {
+                    JavaType targetType = getValueType(ctxt);
+                    return ctxt.handleUnexpectedToken(targetType, JsonToken.START_ARRAY, p, "Cannot deserialize value of type %s from deeply-nested JSON Array: only single wrapper allowed with `%s`", ClassUtil.getTypeDescription(targetType), "DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS");
+                }
+                
                 final Object value = deserialize(p, ctxt);
                 if (p.nextToken() != JsonToken.END_ARRAY) {
                     handleMissingEndArrayForSingle(p, ctxt);
