diff --git a/./github_diff/CVE-2018-11039/oldfiles/HiddenHttpMethodFilter.java b/./github_diff/CVE-2018-11039/newfiles/HiddenHttpMethodFilter.java
index 09ee935..06e5717 100644
--- a/./github_diff/CVE-2018-11039/oldfiles/HiddenHttpMethodFilter.java
+++ b/./github_diff/CVE-2018-11039/newfiles/HiddenHttpMethodFilter.java
@@ -1,4 +1,7 @@
 package org.springframework.web.filter.reactive;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
 import java.util.Locale;
 import reactor.core.publisher.Mono;
 import org.springframework.http.HttpMethod;
@@ -9,6 +12,7 @@ import org.springframework.web.server.ServerWebExchange;
 import org.springframework.web.server.WebFilter;
 import org.springframework.web.server.WebFilterChain;
 public class HiddenHttpMethodFilter implements WebFilter {
+	private static final List<HttpMethod> ALLOWED_METHODS = Collections.unmodifiableList(Arrays.asList(HttpMethod.PUT, HttpMethod.DELETE, HttpMethod.PATCH));
 	 public static final String DEFAULT_METHOD_PARAMETER_NAME = "_method";
 	private String methodParamName = DEFAULT_METHOD_PARAMETER_NAME;
 	 public void setMethodParamName(String methodParamName) {
@@ -32,8 +36,15 @@ public class HiddenHttpMethodFilter implements WebFilter {
 	private ServerWebExchange mapExchange(ServerWebExchange exchange, String methodParamValue) {
 		HttpMethod httpMethod = HttpMethod.resolve(methodParamValue.toUpperCase(Locale.ENGLISH));
 		Assert.notNull(httpMethod, () -> "HttpMethod '" + methodParamValue + "' not supported");
+		if (ALLOWED_METHODS.contains(httpMethod)) {
 			return exchange.mutate().request(builder -> builder.method(httpMethod)).build();
 		}
 		
+		else {
+			return exchange;
+		}
+		
+	}
+	
 }
 
