diff --git a/./github_diff/CVE-2020-1953/oldfiles/YAMLConfiguration.java b/./github_diff/CVE-2020-1953/newfiles/YAMLConfiguration.java
index 2dd3ee1..969ab15 100644
--- a/./github_diff/CVE-2020-1953/oldfiles/YAMLConfiguration.java
+++ b/./github_diff/CVE-2020-1953/newfiles/YAMLConfiguration.java
@@ -1,10 +1,13 @@
 package org.apache.commons.configuration2;
 import org.apache.commons.configuration2.ex.ConfigurationException;
+import org.apache.commons.configuration2.ex.ConfigurationRuntimeException;
 import org.apache.commons.configuration2.io.InputStreamSupport;
 import org.apache.commons.configuration2.tree.ImmutableNode;
 import org.yaml.snakeyaml.DumperOptions;
 import org.yaml.snakeyaml.LoaderOptions;
 import org.yaml.snakeyaml.Yaml;
+import org.yaml.snakeyaml.constructor.Constructor;
+import org.yaml.snakeyaml.representer.Representer;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.Reader;
@@ -22,7 +25,7 @@ public class YAMLConfiguration extends AbstractYAMLBasedConfiguration implements
     @Override
     public void read(final Reader in) throws ConfigurationException {
         try {
-            final Yaml yaml = new Yaml();
+            final Yaml yaml = createYamlForReading(new LoaderOptions());
             final Map<String, Object> map = (Map) yaml.load(in);
             load(map);
         }
@@ -35,7 +38,7 @@ public class YAMLConfiguration extends AbstractYAMLBasedConfiguration implements
     
     public void read(final Reader in, final LoaderOptions options) throws ConfigurationException {
         try {
-            final Yaml yaml = new Yaml(options);
+            final Yaml yaml = createYamlForReading(options);
             final Map<String, Object> map = (Map) yaml.load(in);
             load(map);
         }
@@ -61,7 +64,7 @@ public class YAMLConfiguration extends AbstractYAMLBasedConfiguration implements
     @Override
     public void read(final InputStream in) throws ConfigurationException {
         try {
-            final Yaml yaml = new Yaml();
+            final Yaml yaml = createYamlForReading(new LoaderOptions());
             final Map<String, Object> map = (Map) yaml.load(in);
             load(map);
         }
@@ -74,7 +77,7 @@ public class YAMLConfiguration extends AbstractYAMLBasedConfiguration implements
     
     public void read(final InputStream in, final LoaderOptions options) throws ConfigurationException {
         try {
-            final Yaml yaml = new Yaml(options);
+            final Yaml yaml = createYamlForReading(options);
             final Map<String, Object> map = (Map) yaml.load(in);
             load(map);
         }
@@ -85,5 +88,19 @@ public class YAMLConfiguration extends AbstractYAMLBasedConfiguration implements
         
     }
     
+    private static Yaml createYamlForReading(LoaderOptions options) {
+        return new Yaml(createClassLoadingDisablingConstructor(), new Representer(), new DumperOptions(), options);
+    }
+    
+    private static Constructor createClassLoadingDisablingConstructor() {
+        return new Constructor() {
+            @Override
+            protected Class<?> getClassForName(String name) {
+                throw new ConfigurationRuntimeException("Class loading is disabled.");
+            }
+            
+        };
+    }
+    
 }
 
