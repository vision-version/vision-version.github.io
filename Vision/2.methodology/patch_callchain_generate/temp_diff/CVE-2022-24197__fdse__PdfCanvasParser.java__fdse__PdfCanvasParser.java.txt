diff --git a/./github_diff/CVE-2022-24197/oldfiles/PdfCanvasParser.java b/./github_diff/CVE-2022-24197/newfiles/PdfCanvasParser.java
index 99a7f0a..e8f3eb3 100644
--- a/./github_diff/CVE-2022-24197/oldfiles/PdfCanvasParser.java
+++ b/./github_diff/CVE-2022-24197/newfiles/PdfCanvasParser.java
@@ -1,4 +1,5 @@
 package com.itextpdf.kernel.pdf.canvas.parser.util;
+import com.itextpdf.commons.utils.MessageFormatUtil;
 import com.itextpdf.kernel.exceptions.PdfException;
 import com.itextpdf.io.source.PdfTokenizer;
 import com.itextpdf.kernel.exceptions.KernelExceptionMessageConstant;
@@ -79,10 +80,14 @@ public class PdfCanvasParser {
         PdfArray array = new PdfArray();
         while (true) {
             PdfObject obj = readObject();
-            if (!obj.isArray() && tokeniser.getTokenType() == PdfTokenizer.TokenType.EndArray)
+            if (!obj.isArray() && tokeniser.getTokenType() == PdfTokenizer.TokenType.EndArray) {
                 break;
-            if (tokeniser.getTokenType() == PdfTokenizer.TokenType.EndDic && obj.getType() != PdfObject.DICTIONARY)
-                tokeniser.throwError(KernelExceptionMessageConstant.UNEXPECTED_GT_GT);
+            }
+            
+            if (tokeniser.getTokenType() == PdfTokenizer.TokenType.EndDic && obj.getType() != PdfObject.DICTIONARY) {
+                tokeniser.throwError(MessageFormatUtil.format(KernelExceptionMessageConstant.UNEXPECTED_TOKEN, ">>"));
+            }
+            
             array.add(obj);
         }
         
