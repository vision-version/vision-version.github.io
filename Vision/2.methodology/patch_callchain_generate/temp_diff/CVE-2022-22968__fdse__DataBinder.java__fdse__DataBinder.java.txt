diff --git a/./github_diff/CVE-2022-22968/oldfiles/DataBinder.java b/./github_diff/CVE-2022-22968/newfiles/DataBinder.java
index b671196..7aa024b 100644
--- a/./github_diff/CVE-2022-22968/oldfiles/DataBinder.java
+++ b/./github_diff/CVE-2022-22968/newfiles/DataBinder.java
@@ -204,7 +204,19 @@ public class DataBinder implements PropertyEditorRegistry, TypeConverter {
 	}
 	
 	 public void setDisallowedFields(@Nullable String... disallowedFields) {
-		this.disallowedFields = PropertyAccessorUtils.canonicalPropertyNames(disallowedFields);
+		if (disallowedFields == null) {
+			this.disallowedFields = null;
+		}
+		
+		else {
+			String[] fieldPatterns = new String[disallowedFields.length];
+			for (int i = 0; i < fieldPatterns.length; i++) {
+				fieldPatterns[i] = PropertyAccessorUtils.canonicalPropertyName(disallowedFields[i]).toLowerCase();
+			}
+			
+			this.disallowedFields = fieldPatterns;
+		}
+		
 	}
 	
 	 @Nullable
@@ -402,7 +414,7 @@ public class DataBinder implements PropertyEditorRegistry, TypeConverter {
 	 protected boolean isAllowed(String field) {
 		String[] allowed = getAllowedFields();
 		String[] disallowed = getDisallowedFields();
-		return ((ObjectUtils.isEmpty(allowed) || PatternMatchUtils.simpleMatch(allowed, field)) && (ObjectUtils.isEmpty(disallowed) || !PatternMatchUtils.simpleMatch(disallowed, field)));
+		return ((ObjectUtils.isEmpty(allowed) || PatternMatchUtils.simpleMatch(allowed, field)) && (ObjectUtils.isEmpty(disallowed) || !PatternMatchUtils.simpleMatch(disallowed, field.toLowerCase())));
 	}
 	
 	 protected void checkRequiredFields(MutablePropertyValues mpvs) {
