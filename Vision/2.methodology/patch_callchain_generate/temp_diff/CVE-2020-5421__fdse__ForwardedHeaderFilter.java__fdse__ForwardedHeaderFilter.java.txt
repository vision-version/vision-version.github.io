diff --git a/./github_diff/CVE-2020-5421/oldfiles/ForwardedHeaderFilter.java b/./github_diff/CVE-2020-5421/newfiles/ForwardedHeaderFilter.java
index c8808a6..5208cce 100644
--- a/./github_diff/CVE-2020-5421/oldfiles/ForwardedHeaderFilter.java
+++ b/./github_diff/CVE-2020-5421/newfiles/ForwardedHeaderFilter.java
@@ -36,15 +36,8 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 		FORWARDED_HEADER_NAMES.add("X-Forwarded-For");
 	}
 	
-	private final UrlPathHelper pathHelper;
 	private boolean removeOnly;
 	private boolean relativeRedirects;
-	public ForwardedHeaderFilter() {
-		this.pathHelper = new UrlPathHelper();
-		this.pathHelper.setUrlDecode(false);
-		this.pathHelper.setRemoveSemicolonContent(false);
-	}
-	
 	 public void setRemoveOnly(boolean removeOnly) {
 		this.removeOnly = removeOnly;
 	}
@@ -83,7 +76,7 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 		}
 		
 		else {
-			HttpServletRequest wrappedRequest = new ForwardedHeaderExtractingRequest(request, this.pathHelper);
+			HttpServletRequest wrappedRequest = new ForwardedHeaderExtractingRequest(request);
 			HttpServletResponse wrappedResponse = this.relativeRedirects ? RelativeRedirectResponseWrapper.wrapIfNecessary(response, HttpStatus.SEE_OTHER) : new ForwardedHeaderExtractingResponse(response, wrappedRequest);
 			filterChain.doFilter(wrappedRequest, wrappedResponse);
 		}
@@ -146,7 +139,7 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 		@Nullable
 		private final InetSocketAddress remoteAddress;
 		private final ForwardedPrefixExtractor forwardedPrefixExtractor;
-		ForwardedHeaderExtractingRequest(HttpServletRequest servletRequest, UrlPathHelper pathHelper) {
+		ForwardedHeaderExtractingRequest(HttpServletRequest servletRequest) {
 			super(servletRequest);
 			ServerHttpRequest request = new ServletServerHttpRequest(servletRequest);
 			UriComponents uriComponents = UriComponentsBuilder.fromHttpRequest(request).build();
@@ -158,7 +151,7 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 			this.remoteAddress = UriComponentsBuilder.parseForwardedFor(request, request.getRemoteAddress());
 			String baseUrl = this.scheme + "://" + this.host + (port == -1 ? "" : ":" + port);
 			Supplier<HttpServletRequest> delegateRequest = () -> (HttpServletRequest) getRequest();
-			this.forwardedPrefixExtractor = new ForwardedPrefixExtractor(delegateRequest, pathHelper, baseUrl);
+			this.forwardedPrefixExtractor = new ForwardedPrefixExtractor(delegateRequest, baseUrl);
 		}
 		
 		@Override
@@ -219,7 +212,6 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 	
 	 private static class ForwardedPrefixExtractor {
 		private final Supplier<HttpServletRequest> delegate;
-		private final UrlPathHelper pathHelper;
 		private final String baseUrl;
 		private String actualRequestUri;
 		@Nullable
@@ -227,9 +219,8 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 		@Nullable
 		private String requestUri;
 		private String requestUrl;
-		 public ForwardedPrefixExtractor( Supplier<HttpServletRequest> delegateRequest, UrlPathHelper pathHelper, String baseUrl) {
+		 public ForwardedPrefixExtractor(Supplier<HttpServletRequest> delegateRequest, String baseUrl) {
 			this.delegate = delegateRequest;
-			this.pathHelper = pathHelper;
 			this.baseUrl = baseUrl;
 			this.actualRequestUri = delegateRequest.get().getRequestURI();
 			this.forwardedPrefix = initForwardedPrefix(delegateRequest.get());
@@ -270,7 +261,7 @@ public class ForwardedHeaderFilter extends OncePerRequestFilter {
 		@Nullable
 		private String initRequestUri() {
 			if (this.forwardedPrefix != null) {
-				return this.forwardedPrefix + this.pathHelper.getPathWithinApplication(this.delegate.get());
+				return this.forwardedPrefix + UrlPathHelper.rawPathInstance.getPathWithinApplication(this.delegate.get());
 			}
 			
 			return null;
