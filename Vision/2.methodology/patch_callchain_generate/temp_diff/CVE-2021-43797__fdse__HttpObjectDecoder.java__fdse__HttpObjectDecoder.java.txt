diff --git a/./github_diff/CVE-2021-43797/oldfiles/HttpObjectDecoder.java b/./github_diff/CVE-2021-43797/newfiles/HttpObjectDecoder.java
index fd6e842..bf2c4f2 100644
--- a/./github_diff/CVE-2021-43797/oldfiles/HttpObjectDecoder.java
+++ b/./github_diff/CVE-2021-43797/newfiles/HttpObjectDecoder.java
@@ -577,7 +577,7 @@ public abstract class HttpObjectDecoder extends ByteToMessageDecoder {
         int colonEnd;
         int valueStart;
         int valueEnd;
-        nameStart = findNonWhitespace(sb, 0, false);
+        nameStart = findNonWhitespace(sb, 0);
         for (nameEnd = nameStart; nameEnd < length; nameEnd ++) {
             char ch = sb.charAtUnsafe(nameEnd);
             if (ch == ':' || (!isDecodingRequest() && isOWS(ch))) {
@@ -599,7 +599,7 @@ public abstract class HttpObjectDecoder extends ByteToMessageDecoder {
         }
         
         name = sb.subStringUnsafe(nameStart, nameEnd);
-        valueStart = findNonWhitespace(sb, colonEnd, true);
+        valueStart = findNonWhitespace(sb, colonEnd);
         if (valueStart == length) {
             value = EMPTY_VALUE;
         }
@@ -642,13 +642,13 @@ public abstract class HttpObjectDecoder extends ByteToMessageDecoder {
         return c == ' ' || c == (char) 0x09 || c == (char) 0x0B || c == (char) 0x0C || c == (char) 0x0D;
     }
     
-    private static int findNonWhitespace(AppendableCharSequence sb, int offset, boolean validateOWS) {
+    private static int findNonWhitespace(AppendableCharSequence sb, int offset) {
         for (int result = offset; result < sb.length(); ++result) {
             char c = sb.charAtUnsafe(result);
             if (!Character.isWhitespace(c)) {
                 return result;
             }
-             else if (validateOWS && !isOWS(c)) {
+             else if (!isOWS(c)) {
                 throw new IllegalArgumentException("Invalid separator, only a single space or horizontal tab allowed," + " but received a '" + c + "' (0x" + Integer.toHexString(c) + ")");
             }
             
