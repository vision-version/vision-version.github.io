diff --git a/./github_diff/CVE-2024-24569/oldfiles/ZipSecurity.java b/./github_diff/CVE-2024-24569/newfiles/ZipSecurity.java
index 714fa99..42c66c8 100644
--- a/./github_diff/CVE-2024-24569/oldfiles/ZipSecurity.java
+++ b/./github_diff/CVE-2024-24569/newfiles/ZipSecurity.java
@@ -3,6 +3,7 @@ import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.charset.Charset;
+import java.nio.file.Path;
 import java.util.zip.ZipEntry;
 import java.util.zip.ZipInputStream;
 public final class ZipSecurity {
@@ -44,9 +45,8 @@ public final class ZipSecurity {
     
     private boolean containsEscapesAndTargetsBelowRoot(final String name) {
       if (name.contains("../") || name.contains("..\\")) {
-        final File fileWithEscapes = new File(name);
         try {
-          if (isBelowCurrentDirectory(fileWithEscapes)) {
+          if (isBelowOrSisterToCurrentDirectory(name)) {
             return true;
           }
           
@@ -59,11 +59,12 @@ public final class ZipSecurity {
       return false;
     }
     
-    boolean isBelowCurrentDirectory(final File fileWithEscapes) throws IOException {
-      final File currentDirectory = new File("");
-      String canonicalizedTargetPath = fileWithEscapes.getCanonicalPath();
-      String canonicalizedCurrentPath = currentDirectory.getCanonicalPath();
-      return !canonicalizedTargetPath.startsWith(canonicalizedCurrentPath);
+    private boolean isBelowOrSisterToCurrentDirectory(final String untrustedFileWithEscapes) throws IOException {
+      final File currentDirectory = new File("").getCanonicalFile();
+      final Path currentPathRoot = currentDirectory.toPath();
+      final File untrustedFile = new File(currentDirectory, untrustedFileWithEscapes);
+      final Path pathWithEscapes = untrustedFile.getCanonicalFile().toPath();
+      return !pathWithEscapes.startsWith(currentPathRoot);
     }
     
     private boolean isRootFileEntry(final String name) {
