diff --git a/./github_diff/CVE-2016-1000338/oldfiles/DSASigner.java b/./github_diff/CVE-2016-1000338/newfiles/DSASigner.java
index f74f4e4..6f3dfaf 100644
--- a/./github_diff/CVE-2016-1000338/oldfiles/DSASigner.java
+++ b/./github_diff/CVE-2016-1000338/newfiles/DSASigner.java
@@ -7,8 +7,6 @@ import java.security.PublicKey;
 import java.security.SecureRandom;
 import java.security.SignatureException;
 import java.security.SignatureSpi;
-import java.security.interfaces.DSAKey;
-import java.security.interfaces.DSAPublicKey;
 import java.security.spec.AlgorithmParameterSpec;
 import org.bouncycastle.asn1.ASN1Encoding;
 import org.bouncycastle.asn1.ASN1Integer;
@@ -16,7 +14,6 @@ import org.bouncycastle.asn1.ASN1Primitive;
 import org.bouncycastle.asn1.ASN1Sequence;
 import org.bouncycastle.asn1.DERSequence;
 import org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers;
-import org.bouncycastle.asn1.x509.SubjectPublicKeyInfo;
 import org.bouncycastle.asn1.x509.X509ObjectIdentifiers;
 import org.bouncycastle.crypto.CipherParameters;
 import org.bouncycastle.crypto.DSA;
@@ -116,6 +113,10 @@ public class DSASigner extends SignatureSpi implements PKCSObjectIdentifiers, X5
     
     private BigInteger[] derDecode( byte[]  encoding) throws IOException {
         ASN1Sequence s = (ASN1Sequence)ASN1Primitive.fromByteArray(encoding);
+        if (s.size() != 2){
+            throw new IOException("malformed signature");
+        }
+        
         return new BigInteger[]{             ((ASN1Integer)s.getObjectAt(0)).getValue(), ((ASN1Integer)s.getObjectAt(1)).getValue() };
     }
     
