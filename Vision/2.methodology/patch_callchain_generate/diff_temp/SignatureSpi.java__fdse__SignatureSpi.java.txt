diff --git a/github_diff/CVE-2016-1000342/oldfiles/SignatureSpi.java b/github_diff/CVE-2016-1000342/newfiles/SignatureSpi.java
index 4faec37..bc87549 100644
--- a/github_diff/CVE-2016-1000342/oldfiles/SignatureSpi.java
+++ b/github_diff/CVE-2016-1000342/newfiles/SignatureSpi.java
@@ -21,7 +21,6 @@ import org.bouncycastle.crypto.digests.SHA256Digest;
 import org.bouncycastle.crypto.digests.SHA384Digest;
 import org.bouncycastle.crypto.digests.SHA3Digest;
 import org.bouncycastle.crypto.digests.SHA512Digest;
-import org.bouncycastle.crypto.params.ECPublicKeyParameters;
 import org.bouncycastle.crypto.params.ParametersWithRandom;
 import org.bouncycastle.crypto.signers.ECDSASigner;
 import org.bouncycastle.crypto.signers.ECNRSigner;
@@ -29,6 +28,7 @@ import org.bouncycastle.crypto.signers.HMacDSAKCalculator;
 import org.bouncycastle.jcajce.provider.asymmetric.util.DSABase;
 import org.bouncycastle.jcajce.provider.asymmetric.util.DSAEncoder;
 import org.bouncycastle.jcajce.provider.asymmetric.util.ECUtil;
+import org.bouncycastle.util.Arrays;
 public class SignatureSpi extends DSABase {
     SignatureSpi(Digest digest, DSA signer, DSAEncoder encoder) {
         super(digest, signer, encoder);
@@ -280,6 +280,14 @@ public class SignatureSpi extends DSABase {
         
         public BigInteger[] decode( byte[] encoding) throws IOException {
             ASN1Sequence s = (ASN1Sequence)ASN1Primitive.fromByteArray(encoding);
+            if (s.size() != 2){
+                throw new IOException("malformed signature");
+            }
+            
+            if (!Arrays.areEqual(encoding, s.getEncoded(ASN1Encoding.DER))){
+                throw new IOException("malformed signature");
+            }
+            
             BigInteger[] sig = new BigInteger[2];
             sig[0] = ASN1Integer.getInstance(s.getObjectAt(0)).getValue();
             sig[1] = ASN1Integer.getInstance(s.getObjectAt(1)).getValue();
