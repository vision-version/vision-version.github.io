package org.springframework.security.web.util.matcher;
import java.util.regex.Pattern;
import javax.servlet.http.HttpServletRequest;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.core.log.LogMessage;
import org.springframework.http.HttpMethod;
import org.springframework.util.StringUtils;
public final class RegexRequestMatcher implements RequestMatcher {
	private static final int DEFAULT = Pattern.DOTALL;
	private static final int CASE_INSENSITIVE = DEFAULT | Pattern.CASE_INSENSITIVE;
	private static final Log logger = LogFactory.getLog(RegexRequestMatcher.class);
	private final Pattern pattern;
	private final HttpMethod httpMethod;
	 public RegexRequestMatcher(String pattern, String httpMethod) {
		this(pattern, httpMethod, false);
	}
	
	 public RegexRequestMatcher(String pattern, String httpMethod, boolean caseInsensitive) {
		this.pattern = Pattern.compile(pattern, caseInsensitive ? CASE_INSENSITIVE : DEFAULT);
		this.httpMethod = StringUtils.hasText(httpMethod) ? HttpMethod.valueOf(httpMethod) : null;
	}
	
	 @Override
	public boolean matches(HttpServletRequest request) {
		if (this.httpMethod != null && request.getMethod() != null && this.httpMethod != HttpMethod.resolve(request.getMethod())) {
			return false;
		}
		
		String url = request.getServletPath();
		String pathInfo = request.getPathInfo();
		String query = request.getQueryString();
		if (pathInfo != null || query != null) {
			StringBuilder sb = new StringBuilder(url);
			if (pathInfo != null) {
				sb.append(pathInfo);
			}
			
			if (query != null) {
				sb.append('?').append(query);
			}
			
			url = sb.toString();
		}
		
		logger.debug(LogMessage.format("Checking match of request : '%s'; against '%s'", url, this.pattern));
		return this.pattern.matcher(url).matches();
	}
	
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("Regex [pattern='").append(this.pattern).append("'");
		if (this.httpMethod != null) {
			sb.append(", ").append(this.httpMethod);
		}
		
		sb.append("]");
		return sb.toString();
	}
	
}

