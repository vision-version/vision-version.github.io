package org.springframework.data.rest.webmvc.json.patch;
import java.util.ArrayList;
import java.util.List;
import org.springframework.data.mapping.PropertyPath;
import org.springframework.util.StringUtils;
class AddOperation extends PatchOperation {
	 public AddOperation(String path, Object value) {
		super("add", path, value);
	}
	
	 @Override <T> void perform(Object targetObject, Class<T> type) {
		addValue(targetObject, evaluateValueFromTarget(targetObject, type));
	}
	
	 @Override
	protected <T> Object evaluateValueFromTarget(Object targetObject, Class<T> entityType) {
		if (!path.endsWith("-")) {
			return super.evaluateValueFromTarget(targetObject, entityType);
		}
		
		List<String> segments = new ArrayList<String>();
		for (String segment : path.split("/")) {
			if (!(segment.matches("\\d+") || segment.equals("-") || segment.isEmpty())) {
				segments.add(segment);
			}
			
		}
		
		PropertyPath propertyPath = PropertyPath.from(StringUtils.collectionToDelimitedString(segments, "."), entityType);
		return value instanceof LateObjectEvaluator ? ((LateObjectEvaluator) value).evaluate(propertyPath.getType()) : value;
	}
	
}

