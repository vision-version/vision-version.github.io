package org.torpedoquery.jpa.internal.conditions;
import org.torpedoquery.jpa.internal.Parameter;
import org.torpedoquery.jpa.internal.Selector;
public class LikeCondition<T> extends SingleParameterCondition<T> {
	public static enum Type {
		ANY {
			@Override
			public String wrap(String toMatch) {
				return "%" + toMatch + "%";
			}
			
		}, STARTSWITH {
			@Override
			public String wrap(String toMatch) {
				return toMatch + "%";
			}
			
		}, ENDSWITH {
			@Override
			public String wrap(String toMatch) {
				return "%" + toMatch;
			}
			
		}, UNKNOW {
			@Override
			public String wrap(String toMatch) {
				return toMatch;
			}
			
		};
		public abstract String wrap(String toMatch);
	}
	
	 public LikeCondition(Selector selector, Parameter<T> parameter) {
		super(selector, parameter);
	}
	
	@Override
	protected String getComparator() {
		return "like";
	}
	
}

