{
    "old_info": {
        "hits": {
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw:java.lang.String(byte[],java.lang.String)": 1.2928932188134525,
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw:boolean(byte[],java.lang.String)": 1.0000000000000002,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw:byte[](byte[],byte[],int,boolean,int)": 1.0,
            "Virtual__split__Entry": 0.8284277561453016,
            "Virtual__split__Exit": 0.7071074125856589,
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw:boolean(java.lang.String,java.lang.String)": 0.5857870690260164,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw:java.lang.String(java.lang.String,java.lang.String)": 0.4142141937722065,
            "Virtual_CommitMessage_Class__split__PostgreSQL": 1.2627982226510625e-06,
            "Virtual_CommitMessage_Class__split__PgJDBC": 1.2627982226510625e-06
        },
        "similarity": {
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.8709677419354839,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)": 0.19032258064516128,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.1573033707865169,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.1573033707865169,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.09999999999999998,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.09677419354838712
        }
    },
    "new_info": {
        "hits": {
            "Virtual__split__Entry": 1.0000000000000153,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw:java.lang.String(byte[],java.lang.String)": 0.5773522145699268,
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw:boolean(java.lang.String,java.lang.String)": 0.5773522145699268,
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw:boolean(byte[],java.lang.String)": 0.5773522145699268,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw:java.lang.String(byte[],java.lang.String,boolean)": 6.072155109662184e-06,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw:byte[](byte[],byte[],int,boolean,int,boolean)": 4.696563506795157e-06,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck:java.lang.String(byte[],java.lang.String)": 4.696563506795153e-06,
            "Virtual__split__Exit": 3.3209719191758452e-06,
            "Virtual_CommitMessage_Class__split__PostgreSQL": 3.04954362375647e-14,
            "Virtual_CommitMessage_Class__split__PgJDBC": 3.04954362375647e-14
        },
        "similarity": {
            "org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.5303030303030303,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt, boolean for_check)": 0.4277777777777778,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)": 0.33644859813084116,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.3285714285714286,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.28971962616822433,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.25757575757575757,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.2222222222222222,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt, boolean for_check)": 0.19999999999999996,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.19444444444444442,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt, boolean for_check)": 0.19410745233968807,
            "org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.1742424242424242,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(String plaintext, String hashed)": 0.12651646447140386,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpwforcheck(byte[] passwordb, String salt)": 0.11611785095320626,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.checkpw(byte[] passwordb, String hashed)": 0.07452339688041598,
            "org.springframework.security.crypto.bcrypt.BCrypt.crypt_raw(byte[] password, byte[] salt, int log_rounds, boolean sign_ext_bug, int safety, boolean for_check)__split__org.springframework.security.crypto.bcrypt.BCrypt.hashpw(byte[] passwordb, String salt)": 0.051993067590987874
        }
    }
}