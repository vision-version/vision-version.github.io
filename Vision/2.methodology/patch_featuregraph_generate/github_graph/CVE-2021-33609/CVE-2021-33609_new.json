{
    "nodes": [
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__151",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__152",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__155",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__156",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__160",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__159"
    ],
    "edges": [
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__151",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__152"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__151",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__155"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__155",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__156"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__159",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__160"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__151",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__159"
        ]
    ],
    "node_dicts": {
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__151": {
            "weight": 3,
            "node_string": "if (numberOfRows > getMaximumAllowedRows()) {"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__152": {
            "weight": 1,
            "node_string": "throw new IllegalStateException( \"Client tried fetch more rows than allowed. This is denied to prevent denial of service.\");"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__155": {
            "weight": 1,
            "node_string": "setPushRows(Range.withLength(firstRowIndex, numberOfRows));"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.onRequestRows:void(int,int,int,int)__split__150__split__157__split__156": {
            "weight": 1,
            "node_string": "markAsDirty();"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__159": {
            "weight": 1,
            "node_string": "protected int getMaximumAllowedRows() {"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2021-33609/newfiles/DataCommunicator.java__split__com.vaadin.data.provider.DataCommunicator.getMaximumAllowedRows:int()__split__159__split__161__split__160": {
            "weight": 1,
            "node_string": "return MAXIMUM_ALLOWED_ROWS;"
        }
    }
}