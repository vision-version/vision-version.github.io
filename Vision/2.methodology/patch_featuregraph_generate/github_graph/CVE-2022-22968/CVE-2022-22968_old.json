{
    "nodes": [
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.setDisallowedFields:void(java.lang.String[])__split__206__split__208__split__207",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__405",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__404",
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__403"
    ],
    "edges": [
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__403",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__404"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__403",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__405"
        ],
        [
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__404",
            "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__405"
        ]
    ],
    "node_dicts": {
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.setDisallowedFields:void(java.lang.String[])__split__206__split__208__split__207": {
            "weight": 1,
            "node_string": "this.disallowedFields = PropertyAccessorUtils.canonicalPropertyNames(disallowedFields);"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__403": {
            "weight": 1,
            "node_string": "String[] allowed = getAllowedFields();"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__404": {
            "weight": 1,
            "node_string": "String[] disallowed = getDisallowedFields();"
        },
        "2.methodology/patch_featuregraph_generate/../patch_callchain_generate/github_diff/CVE-2022-22968/oldfiles/DataBinder.java__split__org.springframework.validation.DataBinder.isAllowed:boolean(java.lang.String)__split__402__split__406__split__405": {
            "weight": 1,
            "node_string": "return ((ObjectUtils.isEmpty(allowed) || PatternMatchUtils.simpleMatch(allowed, field)) && (ObjectUtils.isEmpty(disallowed) || !PatternMatchUtils.simpleMatch(disallowed, field)));"
        }
    }
}