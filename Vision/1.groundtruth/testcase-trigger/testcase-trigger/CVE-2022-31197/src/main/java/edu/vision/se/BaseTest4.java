package edu.vision.se;

import org.junit.After;
import org.junit.Assume;
import org.junit.Before;
import org.postgresql.PGConnection;
// import org.postgresql.PGProperty;
// import org.postgresql.core.Version;
// import org.postgresql.jdbc.PreferQueryMode;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.Properties;

public class BaseTest4 {

    public enum BinaryMode {
        REGULAR, FORCE
    }

    public enum ReWriteBatchedInserts {
        YES, NO
    }

    public enum AutoCommit {
        YES, NO
    }

    public enum StringType {
        UNSPECIFIED, VARCHAR;
    }

    protected Connection con;
    private BinaryMode binaryMode;
    private ReWriteBatchedInserts reWriteBatchedInserts;
    // protected PreferQueryMode preferQueryMode;
    private StringType stringType;

    protected void updateProperties(Properties props) {
        if (binaryMode == BinaryMode.FORCE) {
            forceBinary(props);
        }
        if (stringType != null) {
            // PGProperty.STRING_TYPE.set(props, stringType.name().toLowerCase());
        }
    }

    protected void forceBinary(Properties props) {
        //PGProperty.PREPARE_THRESHOLD.set(props, -1);
    }

    public final void setBinaryMode(BinaryMode binaryMode) {
        this.binaryMode = binaryMode;
    }

    public StringType getStringType() {
        return stringType;
    }

    public void setStringType(StringType stringType) {
        this.stringType = stringType;
    }

    public void setReWriteBatchedInserts(
            ReWriteBatchedInserts reWriteBatchedInserts) {
        this.reWriteBatchedInserts = reWriteBatchedInserts;
    }

    @Before
    public void setUp() throws Exception {
        Properties props = new Properties();
        updateProperties(props);
        con = TestUtil.openDB(props);
        // PGConnection pg = con.unwrap(PGConnection.class);
        // preferQueryMode = pg == null ? PreferQueryMode.EXTENDED : pg.getPreferQueryMode();
    }

    @After
    public void tearDown() throws SQLException {
        TestUtil.closeDB(con);
    }

}