package edu.vision.se;

import java.io.ByteArrayInputStream;
import java.io.IOException;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.data.web.ProjectedPayload;
import org.springframework.data.web.XmlBeamHttpMessageConverter;
import org.springframework.http.HttpInputMessage;
import org.springframework.http.converter.HttpMessageNotReadableException;
import org.xml.sax.SAXParseException;
import org.xmlbeam.annotation.XBRead;

import static org.assertj.core.api.Assertions.*;
import static org.mockito.Mockito.when;

@RunWith(MockitoJUnitRunner.class)
public class Testcase1 {
    XmlBeamHttpMessageConverter converter = new XmlBeamHttpMessageConverter();

    @Mock
    HttpInputMessage message;

    @Test // DATACMNS-1292
    public void doesNotSupportEntityExpansion() throws Exception {

        preparePayload("<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n" //
                + "<!DOCTYPE foo [\n" //
                + "<!ELEMENT foo ANY >\n" //
                + "<!ENTITY xxe \"Bar\" >]><user><firstname>&xxe;</firstname><lastname>Matthews</lastname></user>");

        assertThatExceptionOfType(HttpMessageNotReadableException.class) //
                .isThrownBy(() -> converter.read(Customer.class, message)) //
                .withCauseInstanceOf(SAXParseException.class);
    }

    private void preparePayload(String payload) throws IOException {
        when(message.getBody()).thenReturn(new ByteArrayInputStream(payload.getBytes()));
    }

    @ProjectedPayload
    public interface Customer {

        @XBRead("//firstname")
        String getFirstname();

        @XBRead("//lastname")
        String getLastname();
    }

}