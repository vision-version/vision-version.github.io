package edu.vision.se;

import java.io.IOException;

import org.junit.Test;
import org.springframework.core.io.ClassPathResource;
import org.springframework.data.rest.webmvc.json.patch.JsonPatchPatchConverter;
import org.springframework.data.rest.webmvc.json.patch.Patch;
import org.springframework.data.rest.webmvc.json.patch.PatchException;
import org.springframework.expression.spel.SpelEvaluationException;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

public class Testcase1 {
    @Test(expected = PatchException.class) // DATAREST-1127
    public void rejectsInvalidPaths() throws Exception {
        try {
            readJsonPatch("patch-invalid-path.json").apply(new Todo(), Todo.class);
        } catch (SpelEvaluationException e) {
        }
    }

    private Patch readJsonPatch(String jsonPatchFile) throws IOException, JsonParseException, JsonMappingException {

        ClassPathResource resource = new ClassPathResource(jsonPatchFile, getClass());
        JsonNode node = new ObjectMapper().readValue(resource.getInputStream(), JsonNode.class);
        Patch patch = new JsonPatchPatchConverter(new ObjectMapper()).convert(node);

        return patch;
    }
}
