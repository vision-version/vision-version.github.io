
package edu.vision.se;

import org.apache.maven.shared.utils.StringUtils;
import org.apache.maven.shared.utils.cli.Commandline;
import org.apache.maven.shared.utils.cli.shell.BourneShell;
import org.apache.maven.shared.utils.cli.shell.CmdShell;
import org.apache.maven.shared.utils.cli.shell.Shell;
import org.junit.Test;

import java.util.List;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class Testcase7 {

    @Test(timeout = 60000)
    public void testArgumentsWithSemicolon() {

        System.out.println("---- semi colon tests ----");

        Shell sh = new BourneShell();

        sh.setWorkingDirectory("/usr/bin");
        sh.setExecutable("chmod");

        String[] args = {";some&argwithunix$chars"};

        List<String> shellCommandLine = sh.getShellCommandLine(args);

        String cli = StringUtils.join(shellCommandLine.iterator(), " ");
        System.out.println(cli);
        assertTrue(cli.endsWith("';some&argwithunix$chars'"));

        Commandline commandline = new Commandline(new BourneShell());
        commandline.setExecutable("chmod");
        commandline.getShell().setQuotedArgumentsEnabled(true);
        commandline.createArg().setValue("--password");
        commandline.createArg().setValue(";password");

        List<String> lines = commandline.getShell().getShellCommandLine(commandline.getArguments());
        System.out.println(lines);

        assertEquals("'chmod' '--password' ';password'", lines.get(2));

        commandline = new Commandline(new BourneShell());
        commandline.setExecutable("chmod");
        commandline.getShell().setQuotedArgumentsEnabled(true);
        commandline.createArg().setValue("--password");
        commandline.createArg().setValue(";password");
        lines = commandline.getShell().getShellCommandLine(commandline.getArguments());
        System.out.println(lines);

        assertEquals("'chmod' '--password' ';password'", lines.get(2));

        commandline = new Commandline(new CmdShell());
        commandline.getShell().setQuotedArgumentsEnabled(true);
        commandline.createArg().setValue("--password");
        commandline.createArg().setValue(";password");
        lines = commandline.getShell().getShellCommandLine(commandline.getArguments());
        System.out.println(lines);

        assertEquals("cmd.exe", lines.get(0));
        assertEquals("/X", lines.get(1));
        assertEquals("/C", lines.get(2));
        assertEquals("\"--password ;password\"", lines.get(3));
    }

}