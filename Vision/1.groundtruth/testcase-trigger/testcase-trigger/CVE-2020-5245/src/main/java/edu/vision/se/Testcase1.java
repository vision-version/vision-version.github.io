package edu.vision.se;

import io.dropwizard.validation.BaseValidator;
import io.dropwizard.validation.ConstraintViolations;
import io.dropwizard.validation.selfvalidating.SelfValidating;
import io.dropwizard.validation.selfvalidating.SelfValidation;
import io.dropwizard.validation.selfvalidating.ViolationCollector;

import javax.validation.Validator;

import org.junit.Test;
import uk.org.lidalia.slf4jtest.TestLoggerFactory;

import static org.assertj.core.api.Assertions.assertThat;

public class Testcase1 {
    private final Validator validator = BaseValidator.newValidator();

    @SelfValidating
    public static class InjectionExample {
        @SuppressWarnings("unused")
        @SelfValidation
        public void validateFail(ViolationCollector col) {
            col.addViolation("${'value'}");
        }
    }

    @Test
    public void violationMessagesAreEscaped() {
        assertThat(ConstraintViolations.format(validator.validate(new InjectionExample()))).containsExactly(
                " ${'value'}"
        );
        assertThat(TestLoggerFactory.getAllLoggingEvents()).isEmpty();
    }

}