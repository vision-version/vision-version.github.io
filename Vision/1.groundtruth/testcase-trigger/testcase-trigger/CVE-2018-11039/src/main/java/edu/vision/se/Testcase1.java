package edu.vision.se;

import static org.junit.Assert.assertEquals;

import java.io.IOException;
import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;

import org.junit.Test;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.mock.web.MockHttpServletResponse;
import org.springframework.web.filter.HiddenHttpMethodFilter;

public class Testcase1 {
    private final HiddenHttpMethodFilter filter = new HiddenHttpMethodFilter();

    @Test
    public void filterWithParameterDisallowedMethods() throws IOException, ServletException {
        filterWithParameterForMethod("trace", "POST");
        filterWithParameterForMethod("head", "POST");
        filterWithParameterForMethod("options", "POST");
    }

    private void filterWithParameterForMethod(String methodParam, String expectedMethod)
            throws IOException, ServletException {
        MockHttpServletRequest request = new MockHttpServletRequest("POST", "/hotels");
        if (methodParam != null) {
            request.addParameter("_method", methodParam);
        }
        MockHttpServletResponse response = new MockHttpServletResponse();

        FilterChain filterChain = new FilterChain() {

            @Override
            public void doFilter(ServletRequest filterRequest,
                    ServletResponse filterResponse) throws IOException, ServletException {
                assertEquals("Invalid method", expectedMethod,
                        ((HttpServletRequest) filterRequest).getMethod());
            }
        };
        this.filter.doFilter(request, response, filterChain);
    }

}