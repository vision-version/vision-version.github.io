package edu.vision.se;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

import org.junit.Test;
import org.springframework.beans.MutablePropertyValues;
import org.springframework.validation.BindException;
import org.springframework.validation.DataBinder;

public class Testcase1 {
    @Test
    public void bindingWithAllowedAndDisallowedFields() throws BindException {
        TestBean rod = new TestBean();
        DataBinder binder = new DataBinder(rod);
        binder.setAllowedFields("name", "age");
        binder.setDisallowedFields("AGE");
        MutablePropertyValues pvs = new MutablePropertyValues();
        pvs.add("name", "Rod");
        pvs.add("age", 32);

        binder.bind(pvs);
        binder.close();

        assertEquals("changed name correctly", "Rod", rod.getName());
        assertEquals("did not change age", 0, rod.getAge());

        String[] suppressedFields = binder.getBindingResult().getSuppressedFields();
        boolean containsField = false;
        for (String actualField : suppressedFields) {
            if ("age".equals(actualField)) {
                containsField = true;
                break;
            }
        }
        assertTrue("not found: " + "age", containsField);

    }
}