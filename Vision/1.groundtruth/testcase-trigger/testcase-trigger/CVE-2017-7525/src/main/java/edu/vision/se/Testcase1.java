package edu.vision.se;

import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class Testcase1 {
    static class PlainBean {
        public int id;
        public Object obj;
    }

    @Test(timeout = 60000)
    public void testObjectMapperRead() throws Exception {
        final String JSON = "{\"id\": 124,\n" +
                " \"obj\":[ \"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\",\n" +
                "  {\n" +
                "    \"transletBytecodes\" : [ \"AAIAZQ==\" ],\n" +
                "    \"transletName\" : \"a.b\",\n" +
                "    \"outputProperties\" : { }\n" +
                "  }\n" +
                " ]\n" +
                "}";

        try {
            ObjectMapper mapper = new ObjectMapper();
            mapper.enableDefaultTyping();
            mapper.readValue(JSON, PlainBean.class);
            fail("fail the test");
        } catch (JsonMappingException e) {
            validateThrow(e);
        }
    }

    public void validateThrow(Throwable e) {
        assertTrue(e instanceof JsonMappingException);
        JsonMappingException jsonMappingException = (JsonMappingException) e;
        assertTrue(jsonMappingException.getMessage().contains("Invalid type definition for type"));
    }
}
