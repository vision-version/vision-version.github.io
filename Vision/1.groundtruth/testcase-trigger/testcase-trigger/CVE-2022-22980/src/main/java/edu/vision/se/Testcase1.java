package edu.vision.se;

import static org.assertj.core.api.Assertions.*;
import org.bson.Document;
import org.bson.codecs.DecoderContext;
import org.junit.Test;
import org.springframework.data.mongodb.util.json.ParameterBindingDocumentCodec;
import org.springframework.data.mongodb.util.json.ParameterBindingJsonReader;

public class Testcase1 {

    @Test // GH-4089
    public void retainsSpelArgumentTypeViaParameterPlaceholder() {

        String source = "new java.lang.Object()";
        Document target = parse("{ arg0 : :#{?0} }", source);
        assertThat(target.get("arg0")).isEqualTo(source);
    }

    @Test // GH-4089
    public void enforcesStringSpelArgumentTypeViaParameterPlaceholderWhenQuoted() {

        Integer source = 10;
        Document target = parse("{ arg0 : :#{'?0'} }", source);
        assertThat(target.get("arg0")).isEqualTo("10");
    }

    @Test // GH-4089
    public void retainsSpelArgumentTypeViaParameterPlaceholderWhenValueContainsDoubleQuotes() {

        String source = "\\\" + new java.lang.Object() + \\\"";
        Document target = parse("{ arg0 : :#{?0} }", source);
        assertThat(target.get("arg0")).isEqualTo(source);
    }

    private static Document parse(String json, Object... args) {
        ParameterBindingJsonReader reader = new ParameterBindingJsonReader(json, args);
        return new ParameterBindingDocumentCodec().decode(reader, DecoderContext.builder().build());
    }
}