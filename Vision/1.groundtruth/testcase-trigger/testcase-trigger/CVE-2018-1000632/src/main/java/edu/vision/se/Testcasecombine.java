package edu.vision.se;

import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.QName;
import org.junit.Test;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class Testcasecombine {
    @Test(timeout = 60000)
    public void localNameFail() {
        try {
            QName.get("!element");
            fail("the test fail");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }
    }

    @Test(timeout = 60000)
    public void qnameFail1() {
        try {
            QName.get("ns:elem:ent", "http://example.com/namespace");
            fail("the test fail");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }
    }

    @Test(timeout = 60000)
    public void createElementLT() {
        try {
            DocumentHelper.createElement("element<name");
            fail("the test fail");

        } catch (IllegalArgumentException e) {
            assertTrue(true);

        }
    }

    @Test(timeout = 60000)
    public void addElement() {
        try {
            Element root = DocumentHelper.createElement("root");
            root.addElement("element>name");
            fail("the test fail");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }

    }

    @Test(timeout = 60000)
    public void addElementQualified() {
        try {
            Element root = DocumentHelper.createElement("root");
            root.addElement("element>name", "http://example.com/namespace");
            fail("the test fail");
        } catch (IllegalArgumentException e) {
            assertTrue(true);
        }

    }
}
