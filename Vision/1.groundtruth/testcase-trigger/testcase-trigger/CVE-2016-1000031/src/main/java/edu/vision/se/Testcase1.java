package edu.vision.se;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.junit.Test;

import java.io.*;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

public class Testcase1 {
    private byte[] createContentBytes(int size) {
        StringBuilder buffer = new StringBuilder(size);
        byte count = 0;
        for (int i = 0; i < size; i++) {
            buffer.append(count + "");
            count++;
            if (count > 9) {
                count = 0;
            }
        }
        return buffer.toString().getBytes();
    }

    private FileItem createFileItem(byte[] contentBytes, File repository) {
        FileItemFactory factory = new DiskFileItemFactory(16, repository);
        String textFieldName = "textField";

        FileItem item = factory.createItem(
                textFieldName,
                "text/plain",
                true,
                "My File Name"
        );
        try {
            OutputStream os = item.getOutputStream();
            os.write(contentBytes);
            os.close();
        } catch (IOException e) {
            fail("Unexpected IOException" + e);
        }

        return item;
    }

    private ByteArrayOutputStream serialize(Object target) throws Exception {
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        ObjectOutputStream oos = new ObjectOutputStream(baos);
        oos.writeObject(target);
        oos.flush();
        oos.close();
        return baos;
    }

    private Object deserialize(ByteArrayOutputStream baos) throws Exception {
        Object result = null;
        ByteArrayInputStream bais =
                new ByteArrayInputStream(baos.toByteArray());
        ObjectInputStream ois = new ObjectInputStream(bais);
        result = ois.readObject();
        bais.close();

        return result;
    }

    @Test(timeout = 60000)
    public void testInvalidRepositoryWithNullChar() throws Exception {

        byte[] bytes = createContentBytes(16);
        File repository = File.createTempFile("temp", null).getParentFile();

        FileItem item = createFileItem(bytes, repository);
        try {
            deserialize(serialize(item));
            fail("fail the test");
        } catch (Exception e) {
            assertTrue(true);
        }
    }
}
