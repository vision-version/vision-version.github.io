package edu.vision.se;

import org.codehaus.plexus.util.Os;
import org.codehaus.plexus.util.cli.Commandline;
import org.codehaus.plexus.util.cli.shell.BourneShell;
import org.junit.Test;

import java.io.File;

import static org.junit.Assert.assertEquals;

public class Testcase4 {

    /**
     * Test the command line generated for the bash shell
     *
     * @throws Exception
     */
    @Test
    public void testGetShellCommandLineBash_WithWorkingDirectory()
            throws Exception {
        Commandline cmd = new Commandline(new BourneShell());
        cmd.setExecutable("/bin/echo");
        cmd.addArguments(new String[]{
                "hello world"
        });
        File root = File.listRoots()[0];
        File workingDirectory = new File(root, "path with spaces");
        cmd.setWorkingDirectory(workingDirectory);

        String[] shellCommandline = cmd.getShellCommandline();

        assertEquals("Command line size", 3, shellCommandline.length);

        assertEquals("/bin/sh", shellCommandline[0]);
        assertEquals("-c", shellCommandline[1]);
        String expectedShellCmd = "cd '" + root.getAbsolutePath()
                + "path with spaces' && '/bin/echo' 'hello world'";
        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
            expectedShellCmd = "cd '" + root.getAbsolutePath()
                    + "path with spaces' && '\\bin\\echo' 'hello world'";
        }
        assertEquals(expectedShellCmd, shellCommandline[2]);
    }
}
