package edu.vision.se;

import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;

import org.junit.Assert;
import org.junit.Test;

public class Testcase1 {

    @Test(timeout = 2000)
    public void partialSurrogatePair() throws Exception {
        Class<?> clazz = Class.forName("org.apache.commons.compress.archivers.zip.NioZipEncoding");
        Constructor<?> constructor;
        try {
            constructor = clazz.getDeclaredConstructor(Charset.class, boolean.class);
        } catch (NoSuchMethodException e) {
            return;
        }
        constructor.setAccessible(true);
        Object e = constructor.newInstance(StandardCharsets.US_ASCII, true);
        Method method_encode = clazz.getDeclaredMethod("encode", String.class);
        method_encode.setAccessible(true);

        ByteBuffer bb = (ByteBuffer) method_encode.invoke(e, "\ud83c");
        final int off = bb.arrayOffset();
        byte[] result = Arrays.copyOfRange(bb.array(), off, off + bb.limit() - bb.position());
        validateReturnValue(result.length);
    }

    public void validateReturnValue(int length) {
        Assert.assertEquals(1, length);
    }
}