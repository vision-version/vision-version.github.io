package edu.vision.se;

import static org.junit.Assert.fail;

import javax.naming.Context;
import javax.naming.NamingException;
import javax.naming.Reference;
import javax.naming.Referenceable;
import javax.naming.StringRefAddr;

import org.apache.logging.log4j.Level;
import org.apache.logging.log4j.core.lookup.JndiLookup;
import org.apache.logging.log4j.core.lookup.StrLookup;
import org.apache.logging.log4j.message.SimpleMessage;
import org.junit.BeforeClass;
import org.junit.Rule;
import org.junit.Test;
import org.zapodot.junit.ldap.EmbeddedLdapRule;
import org.zapodot.junit.ldap.EmbeddedLdapRuleBuilder;

public class Testcase1 {
    private static final String LDAP_URL = "ldap://127.0.0.1:";
    private static final String RESOURCE = "JndiExploit";
    private static final String TEST_MESSAGE = "TestMessage";
    private static final String DOMAIN_DSN = "dc=apache,dc=org";

    @Rule
    public EmbeddedLdapRule embeddedLdapRule = EmbeddedLdapRuleBuilder.newInstance().usingDomainDsn(DOMAIN_DSN)
            .importingLdifs("JndiRestrictedLookup.ldif").build();

    @BeforeClass
    public static void beforeClass() {
        System.setProperty("log4j2.allowedLdapClasses", Level.class.getName());
        System.setProperty("log4j2.allowedJndiProtocols", "dns");
        System.setProperty("log4j2.enableJndiLookup", "true");
    }

    @Test
    public void testReferenceLookup() throws Exception {
        int port = embeddedLdapRule.embeddedServerPort();
        Context context = embeddedLdapRule.context();
        context.bind("cn=" + RESOURCE + "," + DOMAIN_DSN, new Fruit("Test Message"));
        final StrLookup lookup = new JndiLookup();
        String result = lookup.lookup(LDAP_URL + port + "/" + "cn=" + RESOURCE + "," + DOMAIN_DSN);
        if (result != null) {
            fail("Lookup returned an object");
        }
    }

    @Test
    public void testBadSerializableLookup() throws Exception {
        int port = embeddedLdapRule.embeddedServerPort();
        Context context = embeddedLdapRule.context();
        context.bind("cn=" + TEST_MESSAGE + "," + DOMAIN_DSN, new SimpleMessage("Test Message"));
        final StrLookup lookup = new JndiLookup();
        String result = lookup.lookup(LDAP_URL + port + "/" + "cn=" + TEST_MESSAGE + "," + DOMAIN_DSN);
        if (result != null) {
            fail("Lookup returned an object");
        }
    }

    class Fruit implements Referenceable {
        String fruit;

        public Fruit(String f) {
            fruit = f;
        }

        public Reference getReference() throws NamingException {

            return new Reference(Fruit.class.getName(), new StringRefAddr("fruit",
                    fruit), JndiExploit.class.getName(), null); // factory location
        }

        public String toString() {
            return fruit;
        }
    }
}