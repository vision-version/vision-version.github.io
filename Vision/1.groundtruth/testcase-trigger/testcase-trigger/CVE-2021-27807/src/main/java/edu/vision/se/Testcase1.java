package edu.vision.se;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

import org.junit.Test;

public class Testcase1 {
    @Test
    public void testPositionReadFully()
            throws IOException, InstantiationException, IllegalAccessException, IllegalArgumentException,
            InvocationTargetException, NoSuchMethodException, SecurityException, ClassNotFoundException {
        byte[] inputValues = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
        ByteArrayInputStream bais = new ByteArrayInputStream(inputValues);

        Class<?> clazz = Class.forName("org.apache.pdfbox.pdfparser.InputStreamSource");
        Constructor<?> constructor = clazz.getDeclaredConstructor(InputStream.class);
        constructor.setAccessible(true);
        Object inputStreamSource = constructor.newInstance(bais);
        Method method_readFully = inputStreamSource.getClass().getMethod("readFully", Integer.TYPE);
        Method method_getPosition = inputStreamSource.getClass().getMethod("getPosition");
        method_readFully.setAccessible(true);
        method_getPosition.setAccessible(true);

        method_getPosition.invoke(inputStreamSource);
        method_readFully.invoke(inputStreamSource, 5);
        method_getPosition.invoke(inputStreamSource);
        try {
            method_readFully.invoke(inputStreamSource, 10);
        } catch (InvocationTargetException e) {
            validateThrow(e.getTargetException());
            return;
        }
        fail();
    }

    public void validateThrow(Throwable e) {
        assertTrue(e instanceof EOFException);
    }
}