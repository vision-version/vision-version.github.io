commit bde294d62a8b7f3f1d5a9f50f862c6f0782efb9d
Author: Gary Russell <grussell@vmware.com>
Date:   Wed Nov 10 13:26:00 2021 -0500

    Message toString() Improvement
    
    Don't convert large message bodies to a `String` in `toString()`.
    
    Set a limit (50) that can be modified by users.
    
    Avoid possible OOM Errors.
    
    **cherry-pick to 2.3.x, 2.2.x**
    
    # Conflicts:
    #       spring-amqp/src/main/java/org/springframework/amqp/core/Message.java

diff --git a/spring-amqp/src/main/java/org/springframework/amqp/core/Message.java b/spring-amqp/src/main/java/org/springframework/amqp/core/Message.java
index 8b3edeb4..0cff2e0b 100644
--- a/spring-amqp/src/main/java/org/springframework/amqp/core/Message.java
+++ b/spring-amqp/src/main/java/org/springframework/amqp/core/Message.java
@@ -43,8 +43,12 @@ public class Message implements Serializable {
 
 	private static final String DEFAULT_ENCODING = Charset.defaultCharset().name();
 
+	private static final int DEFAULT_MAX_BODY_LENGTH = 50;
+
 	private static String bodyEncoding = DEFAULT_ENCODING;
 
+	private static int maxBodyLength = DEFAULT_MAX_BODY_LENGTH;
+
 	private final MessageProperties messageProperties;
 
 	private final byte[] body;
@@ -91,6 +95,16 @@ public class Message implements Serializable {
 		bodyEncoding = encoding;
 	}
 
+	/**
+	 * Set the maximum length of a test message body to render as a String in
+	 * {@link #toString()}. Default 50.
+	 * @param length the length to render.
+	 * @since 2.2.20
+	 */
+	public static void setMaxBodyLength(int length) {
+		maxBodyLength = length;
+	}
+
 	public byte[] getBody() {
 		return this.body; //NOSONAR
 	}
@@ -120,10 +134,11 @@ public class Message implements Serializable {
 				return "[serialized object]";
 			}
 			String encoding = encoding(nullProps);
-			if (MessageProperties.CONTENT_TYPE_TEXT_PLAIN.equals(contentType)
+			if (this.body.length <= maxBodyLength
+					&& (MessageProperties.CONTENT_TYPE_TEXT_PLAIN.equals(contentType)
 					|| MessageProperties.CONTENT_TYPE_JSON.equals(contentType)
 					|| MessageProperties.CONTENT_TYPE_JSON_ALT.equals(contentType)
-					|| MessageProperties.CONTENT_TYPE_XML.equals(contentType)) {
+					|| MessageProperties.CONTENT_TYPE_XML.equals(contentType))) {
 				return new String(this.body, encoding);
 			}
 		}
diff --git a/spring-amqp/src/test/java/org/springframework/amqp/core/MessageTests.java b/spring-amqp/src/test/java/org/springframework/amqp/core/MessageTests.java
index 045e3332..4432d7f3 100644
--- a/spring-amqp/src/test/java/org/springframework/amqp/core/MessageTests.java
+++ b/spring-amqp/src/test/java/org/springframework/amqp/core/MessageTests.java
@@ -26,6 +26,7 @@ import java.io.Serializable;
 import java.nio.charset.StandardCharsets;
 import java.util.Collections;
 import java.util.Date;
+import java.util.stream.IntStream;
 
 import org.junit.jupiter.api.Test;
 
@@ -110,6 +111,24 @@ public class MessageTests {
 		assertThat(listMessage.toString()).contains("[serialized object]");
 	}
 
+	@Test
+	void dontToStringLongBody() {
+		MessageProperties messageProperties = new MessageProperties();
+		messageProperties.setContentType(MessageProperties.CONTENT_TYPE_TEXT_PLAIN);
+		StringBuilder builder1 = new StringBuilder();
+		IntStream.range(0, 50).forEach(i -> builder1.append("x"));
+		String bodyAsString = builder1.toString();
+		Message message = new Message(bodyAsString.getBytes(), messageProperties);
+		assertThat(message.toString()).contains(bodyAsString);
+		StringBuilder builder2 = new StringBuilder();
+		IntStream.range(0, 51).forEach(i -> builder2.append("x"));
+		bodyAsString = builder2.toString();
+		message = new Message(bodyAsString.getBytes(), messageProperties);
+		assertThat(message.toString()).contains("[51]");
+		Message.setMaxBodyLength(100);
+		assertThat(message.toString()).contains(bodyAsString);
+	}
+
 	@SuppressWarnings("serial")
 	public static class Foo implements Serializable {
 
