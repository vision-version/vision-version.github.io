package org.owasp.validator.html.scan;
import org.apache.xml.serialize.ElementState;
import org.apache.xml.serialize.HTMLdtd;
import org.apache.xml.serialize.OutputFormat;
import org.owasp.validator.html.InternalPolicy;
import java.io.IOException;
import java.io.Writer;
public class ASHTMLSerializer extends org.apache.xml.serialize.HTMLSerializer {
	private boolean encodeAllPossibleEntities;
    public ASHTMLSerializer(Writer w, OutputFormat format, InternalPolicy policy) {
		super(w, format);
		this.encodeAllPossibleEntities = policy.isEntityEncodeIntlCharacters();
	}
	
	 protected String getEntityRef(int charToPrint) {
		if(encodeAllPossibleEntities || Constants.big5CharsToEncode.indexOf(charToPrint) != -1) return super.getEntityRef(charToPrint);
		return null;
	}
	
	public void endElementIO(String namespaceURI, String localName, String rawName) throws IOException {
		 ElementState state;
		 _printer.unindent();
		state = getElementState();
        if (state.empty){
			_printer.printText('>');
}
		 if (rawName == null || !HTMLdtd.isOnlyOpening(rawName)) {
			if (_indenting && !state.preserveSpace && state.afterElement){
				_printer.breakLine();
}
			 if (state.inCData){
				_printer.printText("]]>");
}
			_printer.printText("</");
			_printer.printText(state.rawName);
			_printer.printText('>');
		}
		
		 state = leaveElementState();
		 if (rawName == null || (!rawName.equalsIgnoreCase("A") && !rawName .equalsIgnoreCase("TD"))){
			state.afterElement = true;
}
		state.empty = false;
		if (isDocumentState()){
			_printer.flush();
}
	}
	
}


