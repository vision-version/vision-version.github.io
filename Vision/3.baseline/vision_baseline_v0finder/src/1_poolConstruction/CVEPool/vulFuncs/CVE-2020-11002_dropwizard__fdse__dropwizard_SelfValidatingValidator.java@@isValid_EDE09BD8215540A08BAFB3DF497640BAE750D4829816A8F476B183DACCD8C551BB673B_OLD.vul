"unchecked","rawtypes")@overridepublicbooleanisvalid(objectvalue,constraintvalidatorcontextcontext)finalviolationcollectorcollector=newviolationcollector(context);context.disabledefaultconstraintviolation();for(validationcallercaller:methodmap.computeifabsent(value.getclass(),this::findmethods))caller.setvalidationobject(value);caller.call(collector);return!collector.hasviolationoccurred();