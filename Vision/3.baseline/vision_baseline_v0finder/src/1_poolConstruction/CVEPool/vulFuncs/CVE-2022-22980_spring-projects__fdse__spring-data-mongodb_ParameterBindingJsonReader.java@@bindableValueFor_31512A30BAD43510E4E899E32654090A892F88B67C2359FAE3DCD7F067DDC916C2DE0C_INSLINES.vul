				Matcher inSpelMatcher = SPEL_PARAMETER_BINDING_PATTERN.matcher(expression); // ?0 '?0'
				Map<String, Object> innerSpelVariables = new HashMap<>();

					String group = inSpelMatcher.group();
					int index = computeParameterIndex(group);
					Object value = getBindableValueForIndex(index);
					String varName = "__QVar" + innerSpelVariables.size();
					expression = expression.replace(group, "#" + varName);
					if(group.startsWith("'")) { // retain the string semantic
						innerSpelVariables.put(varName, nullSafeToString(value));
					} else {
						innerSpelVariables.put(varName, value);
					}
				Object value = evaluateExpression(expression, innerSpelVariables);
			Matcher inSpelMatcher = SPEL_PARAMETER_BINDING_PATTERN.matcher(expression);
			Map<String, Object> innerSpelVariables = new HashMap<>();

				String group = inSpelMatcher.group();
				int index = computeParameterIndex(group);
				Object value = getBindableValueForIndex(index);
				String varName = "__QVar" + innerSpelVariables.size();
				expression = expression.replace(group, "#" + varName);
				if(group.startsWith("'")) { // retain the string semantic
					innerSpelVariables.put(varName, nullSafeToString(value));
				} else {
					innerSpelVariables.put(varName, value);
				}
			computedValue = computedValue.replace(binding, nullSafeToString(evaluateExpression(expression, innerSpelVariables)));
