annotatedmembermutator=propdef.getnonconstructormutator();if(ctxt.canoverrideaccessmodifiers())if((mutatorinstanceofannotatedfield)&&"cause".equals(mutator.getname())&&throwable.class.isassignablefrom(proptype0.getrawclass()));elsemutator.fixaccess(ctxt.isenabled(mapperfeature.override_public_access_modifiers));beanproperty.stdproperty=newbeanproperty.std(propdef.getfullname(),proptype0,propdef.getwrappername(),beandesc.getclassannotations(),mutator,propdef.getmetadata());javatypetype=resolvetype(ctxt,beandesc,proptype0,mutator);if(type!=proptype0)property=property.withtype(type);jsondeserializer<object>propdeser=finddeserializerfromannotation(ctxt,mutator);type=modifytypebyannotation(ctxt,mutator,type);typedeserializertypedeser=type.gettypehandler();settablebeanpropertyprop;if(mutatorinstanceofannotatedmethod)prop=newmethodproperty(propdef,type,typedeser,beandesc.getclassannotations(),(annotatedmethod)mutator);elseprop=newfieldproperty(propdef,type,typedeser,beandesc.getclassannotations(),(annotatedfield)mutator);if(propdeser!=null)prop=prop.withvaluedeserializer(propdeser);annotationintrospector.referencepropertyref=propdef.findreferencetype();if(ref!=null&&ref.ismanagedreference())prop.setmanagedreferencename(ref.getname());objectidinfoobjectidinfo=propdef.findobjectidinfo();if(objectidinfo!=null)prop.setobjectidinfo(objectidinfo);returnprop;