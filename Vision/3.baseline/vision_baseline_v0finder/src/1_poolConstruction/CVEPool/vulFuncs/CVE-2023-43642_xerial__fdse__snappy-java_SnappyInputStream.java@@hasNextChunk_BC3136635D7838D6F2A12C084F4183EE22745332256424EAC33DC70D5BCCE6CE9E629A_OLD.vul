if(finishedreading)returnfalse;uncompressedcursor=0;uncompressedlimit=0;intreadbytes=readnext(header,0,4);if(readbytes<4)returnfalse;intchunksize=snappyoutputstream.readint(header,0);if(chunksize==snappycodec.magic_header_head)intremainingheadersize=snappycodec.headersize()-4;readbytes=readnext(header,4,remainingheadersize);if(readbytes<remainingheadersize)thrownewsnappyioexception(snappyerrorcode.failed_to_uncompress,string.format("insufficientheadersizeinaconcatenatedblock"));if(isvalidheader(header))returnhasnextchunk();elsereturnfalse;if(chunksize<0)thrownewsnappyerror(snappyerrorcode.invalid_chunk_size,"chunksizeistoobigornegative:"+chunksize);if(compressed==null||chunksize>compressed.length)trycompressed=newbyte[chunksize];catch(java.lang.outofmemoryerrore)thrownewsnappyerror(snappyerrorcode.invalid_chunk_size,e.getmessage());readbytes=0;while(readbytes<chunksize)intret=in.read(compressed,readbytes,chunksize-readbytes);if(ret==-1)break;readbytes+=ret;if(readbytes<chunksize)thrownewioexception("failedtoreadchunk");intuncompressedlength=snappy.uncompressedlength(compressed,0,chunksize);if(uncompressed==null||uncompressedlength>uncompressed.length)uncompressed=newbyte[uncompressedlength];intactualuncompressedlength=snappy.uncompress(compressed,0,chunksize,uncompressed,0);if(uncompressedlength!=actualuncompressedlength)thrownewsnappyioexception(snappyerrorcode.invalid_chunk_size,string.format("expected%,dbytes,butdecompressedchunkhas%,dbytes",uncompressedlength,actualuncompressedlength));uncompressedlimit=actualuncompressedlength;returntrue;