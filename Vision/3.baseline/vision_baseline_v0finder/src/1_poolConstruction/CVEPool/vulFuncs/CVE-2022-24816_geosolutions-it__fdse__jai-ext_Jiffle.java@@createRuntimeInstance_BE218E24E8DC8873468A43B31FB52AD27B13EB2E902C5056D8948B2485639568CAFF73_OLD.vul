if(!iscompiled())thrownewit.geosolutions.jaiext.jiffle.jiffleexception("thescripthasnotbeencompiled");stringruntimesource=createruntimesource(model,runtimeclass.getname(),scriptindocs);if(logger.isloggable(level.fine))logger.log(level.fine,"jifflescriptcompiledto:\n\n"+runtimesource);trysimplecompilercompiler=newsimplecompiler();compiler.cook(runtimesource);stringbuildersb=newstringbuilder();sb.append(it.geosolutions.jaiext.jiffle.jiffleproperties.get(it.geosolutions.jaiext.jiffle.jiffleproperties.runtime_package_key)).append(".");switch(model)casedirect:sb.append(it.geosolutions.jaiext.jiffle.jiffleproperties.get(it.geosolutions.jaiext.jiffle.jiffleproperties.direct_class_key));break;caseindirect:sb.append(it.geosolutions.jaiext.jiffle.jiffleproperties.get(it.geosolutions.jaiext.jiffle.jiffleproperties.indirect_class_key));break;default:thrownewillegalargumentexception("internalcompilererror");class<?>clazz=compiler.getclassloader().loadclass(sb.tostring());jiffleruntimeruntime=(jiffleruntime)clazz.newinstance();runtime.setimageparams(imageparams);if(runtimeinstanceofjiffleindirectruntime)((jiffleindirectruntime)runtime).setdestinationbands(destinationbands);returnruntime;catch(exceptionex)thrownewit.geosolutions.jaiext.jiffle.jiffleexception("runtimesourceerrorforsource:"+runtimesource,ex);