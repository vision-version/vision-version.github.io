    public String getListHTML(String base, boolean parent, String query) throws IOException
        {
        }

        boolean sortOrderAscending = true;
        String sortColumn = "N"; // name (or "M" for Last Modified, or "S" for Size)

        // check for query
        if (query != null)
        {
            MultiMap<String> params = new MultiMap<>();
            byte[] rawQuery = query.getBytes(UTF_8);
            UrlEncoded.decodeUtf8To(rawQuery, 0, query.length(), params);

            String paramO = params.getString("O");
            String paramC = params.getString("C");
            if (StringUtil.isNotBlank(paramO))
            {
                if (paramO.equals("A"))
                {
                    sortOrderAscending = true;
                }
                else if (paramO.equals("D"))
                {
                    sortOrderAscending = false;
                }
            }
            if (StringUtil.isNotBlank(paramC))
            {
                if (paramC.equals("N") || paramC.equals("M") || paramC.equals("S"))
                {
                    sortColumn = paramC;
                }
            }
        }

        // Gather up entries
        List<Resource> items = new ArrayList<>();
        for (int i=0 ; i< ls.length ; i++)
        {
            Resource item = addPath(ls[i]);
            items.add(item);
        }

        // Perform sort
        if (sortColumn.equals("M"))
        {
            Collections.sort(items, ResourceCollators.byLastModified(sortOrderAscending));
        }
        else if (sortColumn.equals("S"))
        {
            Collections.sort(items, ResourceCollators.bySize(sortOrderAscending));
        }
        else
        {
            Collections.sort(items, ResourceCollators.byName(sortOrderAscending));
        }


        // Doctype Declaration (HTML5)
        buf.append("<!DOCTYPE html>\n");
        buf.append("<html lang=\"en\">\n");

        // HTML Header
        buf.append("<head>\n");
        buf.append("<meta charset=\"utf-8\">\n");
        buf.append("<link href=\"jetty-dir.css\" rel=\"stylesheet\" />\n");
        buf.append("<title>");
        buf.append("</title>\n");
        buf.append("</head>\n");
        // HTML Body
        buf.append("<body>\n");
        buf.append("<h1 class=\"title\">").append(title).append("</h1>\n");

        // HTML Table
        final String ARROW_DOWN = "&nbsp; &#8681;";
        final String ARROW_UP = "&nbsp; &#8679;";
        String arrow;
        String order;

        buf.append("<table class=\"listing\">\n");
        buf.append("<thead>\n");

        arrow = "";
        order = "A";
        if (sortColumn.equals("N"))
        {
            if(sortOrderAscending)
            {
                order = "D";
                arrow = ARROW_UP;
            }
            else
                order = "A";
                arrow = ARROW_DOWN;
            }
        buf.append("<tr><th class=\"name\"><a href=\"?C=N&O=").append(order).append("\">");
        buf.append("Name").append(arrow);
        buf.append("</a></th>");

        arrow = "";
        order = "A";
        if (sortColumn.equals("M"))
        {
            if(sortOrderAscending)
            {
                order = "D";
                arrow = ARROW_UP;
            }
            else
            {
                order = "A";
                arrow = ARROW_DOWN;
            }
        }

        buf.append("<th class=\"lastmodified\"><a href=\"?C=M&O=").append(order).append("\">");
        buf.append("Last Modified").append(arrow);
        buf.append("</a></th>");

        arrow = "";
        order = "A";
        if (sortColumn.equals("S"))
        {
            if(sortOrderAscending)
            {
                order = "D";
                arrow = ARROW_UP;
            }
            else
            {
                order = "A";
                arrow = ARROW_DOWN;
            }
        }
        buf.append("<th class=\"size\"><a href=\"?C=S&O=").append(order).append("\">");
        buf.append("Size").append(arrow);
        buf.append("</a></th></tr>\n");
        buf.append("</thead>\n");

        buf.append("<tbody>\n");

        if (parent)
        {
            // Name
            buf.append("<tr><td class=\"name\"><a href=\"");
            buf.append(URIUtil.addPaths(encodedBase,"../"));
            buf.append("\">Parent Directory</a></td>");
            // Last Modified
            buf.append("<td class=\"lastmodified\">-</td>");
            // Size
            buf.append("<td>-</td>");
            buf.append("</tr>\n");
        }

        for (Resource item: items)
            String name = item.getName();
            int slashIdx = name.lastIndexOf('/');
            if (slashIdx != -1)
            {
                name = name.substring(slashIdx + 1);
            }
            // Name
            buf.append("<tr><td class=\"name\"><a href=\"");
            String path=URIUtil.addPaths(encodedBase,URIUtil.encodePath(name));
            {
            }
            buf.append(deTag(name));
            if (item.isDirectory() && !path.endsWith("/"))
            {
                buf.append(URIUtil.SLASH);
            }
            buf.append("</a></td>");

            // Last Modified
            buf.append("<td class=\"lastmodified\">");
            buf.append("</td>");

            // Size
            buf.append("<td class=\"size\">");
            buf.append(String.format("%,d", item.length()));
            buf.append(" bytes&nbsp;</td></tr>\n");
        buf.append("</tbody>\n");
        buf.append("</table>\n");
        buf.append("</body></html>\n");
