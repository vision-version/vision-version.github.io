PACK:./clones/netplex__split__json-smart-v2
commit e2791ae506a57491bc856b439d706c81e45adcf8
Author: Erik WÃ¶lfel <erik.woelfel@gmx.de>
Date:   Fri Mar 17 09:24:55 2023 +0100

    fix unstacking issue with more than 400 elements in an array (#133)

diff --git a/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java b/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java
index 24d40c2..87a9329 100644
--- a/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java
+++ b/json-smart/src/main/java/net/minidev/json/parser/JSONParserBase.java
@@ -620,6 +620,7 @@ abstract class JSONParserBase {
 				// should loop skipping read step
 				skipSpace();
 				if (c == '}') {
+					this.depth--;
 					read(); /* unstack */
 					//
 					return mapper.convert(current);
diff --git a/json-smart/src/test/java/net/minidev/json/test/TestOverflow.java b/json-smart/src/test/java/net/minidev/json/test/TestOverflow.java
index df99d1a..07912f2 100644
--- a/json-smart/src/test/java/net/minidev/json/test/TestOverflow.java
+++ b/json-smart/src/test/java/net/minidev/json/test/TestOverflow.java
@@ -1,5 +1,6 @@
 package net.minidev.json.test;
 
+import net.minidev.json.JSONArray;
 import net.minidev.json.JSONValue;
 import net.minidev.json.parser.ParseException;
 
@@ -29,4 +30,21 @@ public class TestOverflow {
 		}
 		assertTrue(false);
 	}
+
+	@Test
+	public void shouldNotFailParsingArraysWith400Elements() throws Exception {
+		int size = 400;
+		StringBuilder sb = new StringBuilder();
+		sb.append("[");
+		for (int i=0; i < size; i++) {
+			sb.append("{a:true}");
+			if(i+1 < size) {
+				sb.append(",");
+			}
+		}
+		sb.append("]");
+		String s = sb.toString();
+		JSONArray array = (JSONArray) JSONValue.parseWithException(s);
+		assertEquals(array.size(), size);
+	}
 }
