PACK:./clones/apache__split__groovy
commit 4df8b652aa018a5d5d1cda8fba938bf3422db31c
Author: Jochen Theodorou <blackdrag@gmx.org>
Date:   Mon Oct 3 18:22:28 2016 +0200

    fix possible deserialization exploit by overriding readObject

diff --git a/src/main/org/codehaus/groovy/runtime/MethodClosure.java b/src/main/org/codehaus/groovy/runtime/MethodClosure.java
index 6dfb2f3010..cacdca8421 100644
--- a/src/main/org/codehaus/groovy/runtime/MethodClosure.java
+++ b/src/main/org/codehaus/groovy/runtime/MethodClosure.java
@@ -21,6 +21,7 @@ package org.codehaus.groovy.runtime;
 import groovy.lang.Closure;
 import groovy.lang.MetaMethod;
 
+import java.io.IOException;
 import java.util.List;
 
 
@@ -71,6 +72,13 @@ public class MethodClosure extends Closure {
         }
         throw new UnsupportedOperationException();
     }
+
+    private void readObject(java.io.ObjectInputStream stream) throws IOException, ClassNotFoundException {
+        if (ALLOW_RESOLVE) {
+            stream.defaultReadObject();
+        }
+        throw new UnsupportedOperationException();
+    }
     
     public Object getProperty(String property) {
         if ("method".equals(property)) {
