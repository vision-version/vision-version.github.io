PACK:./clones/HtmlUnit__split__htmlunit-neko
commit 9d2aecd69223469e40c12ca3edddda09009110cc
Author: Ronald Brill <rbri@rbri.de>
Date:   Thu Apr 14 19:34:11 2022 +0200

    fix oom exception

diff --git a/src/main/java/net/sourceforge/htmlunit/cyberneko/HTMLScanner.java b/src/main/java/net/sourceforge/htmlunit/cyberneko/HTMLScanner.java
index c8b2d27..1209e9f 100644
--- a/src/main/java/net/sourceforge/htmlunit/cyberneko/HTMLScanner.java
+++ b/src/main/java/net/sourceforge/htmlunit/cyberneko/HTMLScanner.java
@@ -2626,7 +2626,7 @@ protected void scanPI() throws IOException {
                     if (c == '?' || c == '/') {
                         final char c0 = (char)c;
                         c = fCurrentEntity.read();
-                        if (c == '>') {
+                        if (c == -1 || c == '>') {
                             break;
                         }
                         fStringBuffer.append(c0);
diff --git a/src/test/java/net/sourceforge/htmlunit/cyberneko/HTMLScannerTest.java b/src/test/java/net/sourceforge/htmlunit/cyberneko/HTMLScannerTest.java
index 0e46e77..bfe89e8 100644
--- a/src/test/java/net/sourceforge/htmlunit/cyberneko/HTMLScannerTest.java
+++ b/src/test/java/net/sourceforge/htmlunit/cyberneko/HTMLScannerTest.java
@@ -253,4 +253,22 @@ public void elementNameNormalization() throws Exception {
         final String[] expectedStringLower = {"(html", "(head", "(title", ")title", ")head", "(body", ")body", ")html"};
         assertEquals(Arrays.asList(expectedStringLower).toString(), filter.collectedStrings.toString());
     }
+
+    /**
+     * Regression test for an oom exception in versions < 2.60.
+     * @throws Exception
+     */
+    @Test
+    public void invalidProcessingInstruction() throws Exception {
+        final String string = "<!--?><?a/";
+
+        final HTMLConfiguration parser = new HTMLConfiguration();
+        final EvaluateInputSourceFilter filter = new EvaluateInputSourceFilter(parser);
+        parser.setProperty("http://cyberneko.org/html/properties/filters", new XMLDocumentFilter[] {filter});
+        final XMLInputSource source = new XMLInputSource(null, "myTest", null, new StringReader(string), "UTF-8");
+        parser.parse(source);
+
+        final String[] expected = {"(HTML", "(head", ")head", "(body", ")body", ")html"};
+        assertEquals(Arrays.asList(expected).toString(), filter.collectedStrings.toString());
+    }
 }
diff --git a/src/test/resources/error-handling/test-broken-pi.html b/src/test/resources/error-handling/test-broken-pi.html
new file mode 100644
index 0000000..b188443
--- /dev/null
+++ b/src/test/resources/error-handling/test-broken-pi.html
@@ -0,0 +1 @@
+<!--?><?a/
\ No newline at end of file
diff --git a/src/test/resources/error-handling/test-broken-pi.html.canonical b/src/test/resources/error-handling/test-broken-pi.html.canonical
new file mode 100644
index 0000000..5d880c7
--- /dev/null
+++ b/src/test/resources/error-handling/test-broken-pi.html.canonical
@@ -0,0 +1,14 @@
+[Warn] HTML1000 No character encoding indicator at beginning of document.
+[Err] HTML1007 Premature end of file encountered.
+#?
+[Warn] HTML1008 Skipping processing instruction.
+?a
+[Err] HTML2000 Empty document.
+[Warn] HTML2006 Bare character content found. Inserting parent element <body>.
+[Warn] HTML2002 Missing parent chain. Inserting proper parent <HTML> for element <head>.
+(HTML
+(head
+)head
+(body
+)body
+)html
diff --git a/src/test/resources/error-handling/test-broken-pi.html.settings b/src/test/resources/error-handling/test-broken-pi.html.settings
new file mode 100644
index 0000000..99f2b06
--- /dev/null
+++ b/src/test/resources/error-handling/test-broken-pi.html.settings
@@ -0,0 +1,2 @@
+property http://cyberneko.org/html/properties/default-encoding ASCII 	
+feature http://cyberneko.org/html/features/report-errors true 	
\ No newline at end of file
