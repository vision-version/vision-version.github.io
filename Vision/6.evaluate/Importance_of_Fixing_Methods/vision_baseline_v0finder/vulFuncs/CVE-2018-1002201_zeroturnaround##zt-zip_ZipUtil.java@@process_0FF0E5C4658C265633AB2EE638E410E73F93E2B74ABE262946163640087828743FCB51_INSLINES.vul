
        /* If we see the relative traversal string of ".." we need to make sure
         * that the outputdir + name doesn't leave the outputdir. See
         * DirectoryTraversalMaliciousTest for details.
         */
        if (name.indexOf("..") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {
          throw new ZipException("The file "+name+" is trying to leave the target output directory of "+outputDir+". Ignoring this file.");
        }


          /* If we see the relative traversal string of ".." we need to make sure
           * that the outputdir + name doesn't leave the outputdir. See
           * DirectoryTraversalMaliciousTest for details.
           */
          if (name.indexOf("..") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {
            throw new ZipException("The file "+name+" is trying to leave the target output directory of "+outputDir+". Ignoring this file.");
          }


          /* If we see the relative traversal string of ".." we need to make sure
           * that the outputdir + name doesn't leave the outputdir. See
           * DirectoryTraversalMaliciousTest for details.
           */
          if (name.indexOf("..") != -1 && !destFile.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {
            throw new ZipException("The file "+name+" is trying to leave the target output directory of "+outputDir+". Ignoring this file.");
          }


        /* If we see the relative traversal string of ".." we need to make sure
         * that the outputdir + name doesn't leave the outputdir. See
         * DirectoryTraversalMaliciousTest for details.
         */
        if (name.indexOf("..") != -1 && !file.getCanonicalPath().startsWith(outputDir.getCanonicalPath())) {
          throw new ZipException("The file "+name+" is trying to leave the target output directory of "+outputDir+". Ignoring this file.");
        }

