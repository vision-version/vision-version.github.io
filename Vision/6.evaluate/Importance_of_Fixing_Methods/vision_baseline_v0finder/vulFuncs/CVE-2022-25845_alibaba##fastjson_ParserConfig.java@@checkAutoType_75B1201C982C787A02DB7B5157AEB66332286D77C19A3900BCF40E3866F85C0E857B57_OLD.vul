if(typename==null)returnnull;if(autotypecheckhandlers!=null)for(autotypecheckhandlerh:autotypecheckhandlers)class<?>type=h.handler(typename,expectclass,features);if(type!=null)returntype;finalintsafemodemask=feature.safemode.mask;booleansafemode=this.safemode||(features&safemodemask)!=0||(json.default_parser_feature&safemodemask)!=0;if(safemode)thrownewjsonexception("safemodenotsupportautotype:"+typename);if(typename.length()>=192||typename.length()<3)thrownewjsonexception("autotypeisnotsupport."+typename);finalbooleanexpectclassflag;if(expectclass==null)expectclassflag=false;elselongexpecthash=typeutils.fnv1a_64(expectclass.getname());if(expecthash==0x90a25f5baa21529el||expecthash==0x2d10a5801b9d6136l||expecthash==0xaf586a571e302c6bl||expecthash==0xed007300a7b227c6l||expecthash==0x295c4605fd1eaa95l||expecthash==0x47ef269aadc650b4l||expecthash==0x6439c4dff712ae8bl||expecthash==0xe3dd9875a2dc5283l||expecthash==0xe2a8ddba03e69e0dl||expecthash==0xd734ceb4c3e9d1dal)expectclassflag=false;elseexpectclassflag=true;stringclassname=typename.replace('$','.');class<?>clazz;finallongh1=(fnv1a_64_magic_hashcode^classname.charat(0))*fnv1a_64_magic_prime;if(h1==0xaf64164c86024f1al)thrownewjsonexception("autotypeisnotsupport."+typename);if((h1^classname.charat(classname.length()-1))*fnv1a_64_magic_prime==0x9198507b5af98f0l)thrownewjsonexception("autotypeisnotsupport."+typename);finallongh3=(((((fnv1a_64_magic_hashcode^classname.charat(0))*fnv1a_64_magic_prime)^classname.charat(1))*fnv1a_64_magic_prime)^classname.charat(2))*fnv1a_64_magic_prime;longfullhash=typeutils.fnv1a_64(classname);booleaninternalwhite=arrays.binarysearch(internal_whitelist_hashcodes,fullhash)>=0;if(internaldenyhashcodes!=null)longhash=h3;for(inti=3;i<classname.length();++i)hash^=classname.charat(i);hash*=fnv1a_64_magic_prime;if(arrays.binarysearch(internaldenyhashcodes,hash)>=0)thrownewjsonexception("autotypeisnotsupport."+typename);if((!internalwhite)&&(autotypesupport||expectclassflag))longhash=h3;for(inti=3;i<classname.length();++i)hash^=classname.charat(i);hash*=fnv1a_64_magic_prime;if(arrays.binarysearch(accepthashcodes,hash)>=0)clazz=typeutils.loadclass(typename,defaultclassloader,true);if(clazz!=null)returnclazz;if(arrays.binarysearch(denyhashcodes,hash)>=0&&typeutils.getclassfrommapping(typename)==null)if(arrays.binarysearch(accepthashcodes,fullhash)>=0)continue;thrownewjsonexception("autotypeisnotsupport."+typename);clazz=typeutils.getclassfrommapping(typename);if(clazz==null)clazz=deserializers.findclass(typename);if(expectclass==null&&clazz!=null&&throwable.class.isassignablefrom(clazz)&&!autotypesupport)clazz=null;if(clazz==null)clazz=typemapping.get(typename);if(internalwhite)clazz=typeutils.loadclass(typename,defaultclassloader,true);if(clazz!=null)if(expectclass!=null&&clazz!=java.util.hashmap.class&&clazz!=java.util.linkedhashmap.class&&!expectclass.isassignablefrom(clazz))thrownewjsonexception("typenotmatch."+typename+"->"+expectclass.getname());returnclazz;if(!autotypesupport)longhash=h3;for(inti=3;i<classname.length();++i)charc=classname.charat(i);hash^=c;hash*=fnv1a_64_magic_prime;if(arrays.binarysearch(denyhashcodes,hash)>=0)thrownewjsonexception("autotypeisnotsupport."+typename);if(arrays.binarysearch(accepthashcodes,hash)>=0)clazz=typeutils.loadclass(typename,defaultclassloader,true);if(clazz==null)returnexpectclass;if(expectclass!=null&&expectclass.isassignablefrom(clazz))thrownewjsonexception("typenotmatch."+typename+"->"+expectclass.getname());returnclazz;booleanjsontype=false;inputstreamis=null;trystringresource=typename.replace('.','/')+".class";if(defaultclassloader!=null)is=defaultclassloader.getresourceasstream(resource);elseis=parserconfig.class.getclassloader().getresourceasstream(resource);if(is!=null)classreaderclassreader=newclassreader(is,true);typecollectorvisitor=newtypecollector("<clinit>",newclass[0]);classreader.accept(visitor);jsontype=visitor.hasjsontype();catch(exceptione)finallyioutils.close(is);finalintmask=feature.supportautotype.mask;booleanautotypesupport=this.autotypesupport||(features&mask)!=0||(json.default_parser_feature&mask)!=0;if(autotypesupport||jsontype||expectclassflag)booleancacheclass=autotypesupport||jsontype;clazz=typeutils.loadclass(typename,defaultclassloader,cacheclass);if(clazz!=null)if(jsontype)typeutils.addmapping(typename,clazz);returnclazz;if(classloader.class.isassignablefrom(clazz)||javax.sql.datasource.class.isassignablefrom(clazz)||javax.sql.rowset.class.isassignablefrom(clazz))thrownewjsonexception("autotypeisnotsupport."+typename);if(expectclass!=null)if(expectclass.isassignablefrom(clazz))typeutils.addmapping(typename,clazz);returnclazz;elsethrownewjsonexception("typenotmatch."+typename+"->"+expectclass.getname());javabeaninfobeaninfo=javabeaninfo.build(clazz,clazz,propertynamingstrategy);if(beaninfo.creatorconstructor!=null&&autotypesupport)thrownewjsonexception("autotypeisnotsupport."+typename);if(!autotypesupport)if(typename.endswith("exception"))returnnull;thrownewjsonexception("autotypeisnotsupport."+typename);if(clazz!=null)typeutils.addmapping(typename,clazz);returnclazz;