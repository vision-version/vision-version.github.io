booleanclosed=false;for(inti=start;i<end;++i)charch=jsonish.charat(i);switch(ch)case'\t':replace(i,i+1,"\\t");break;case'\n':replace(i,i+1,"\\n");break;case'\r':replace(i,i+1,"\\r");break;case'\u2028':replace(i,i+1,"\\u2028");break;case'\u2029':replace(i,i+1,"\\u2029");break;case'"':case'\'':if(i==start)if(ch=='\'')replace(i,i+1,'"');elseif(i+1==end)charstartdelim=jsonish.charat(start);if(startdelim!='\'')startdelim='"';closed=startdelim==ch;if(closed)if(ch=='\'')replace(i,i+1,'"');elseif(ch=='"')insert(i,'\\');break;case'<':if(i+3>=end)break;charc1=jsonish.charat(i+1);charc2=jsonish.charat(i+2);charc3=jsonish.charat(i+3);charlc1=(char)(c1|32);charlc2=(char)(c2|32);charlc3=(char)(c3|32);if((c1=='\\'||c2=='\\'||c3=='\\')||(c1=='!'&&c2=='-'&&c3=='-')||(lc1=='s'&&lc2=='c'&&lc3=='r')||(c1=='/'&&lc2=='s'&&lc3=='c'))replace(i,i+1,"\\u003c");break;case'>':if((i-2)>=start)intcm2=jsonish.charat(i-2);intcm1=jsonish.charat(i-1);if(('-'==cm2||'\\'==cm2)&&('-'==cm1||'\\'==cm1))replace(i,i+1,"\\u003e");break;case']':if(i+2<end)charc1=jsonish.charat(i+1);charc2=jsonish.charat(i+2);if((']'==c1||'\\'==c1)&&('>'==c2||'\\'==c2))replace(i,i+1,"\\u005d");break;case'\\':if(i+1==end)elide(i,i+1);break;charsch=jsonish.charat(i+1);switch(sch)case'b':case'f':case'n':case'r':case't':case'\\':case'/':case'"':++i;break;case'v':replace(i,i+2,"\\u0008");++i;break;case'x':if(i+4<end&&ishexat(i+2)&&ishexat(i+3))replace(i,i+2,"\\u00");i+=3;break;elide(i,i+1);break;case'u':if(i+6<end&&ishexat(i+2)&&ishexat(i+3)&&ishexat(i+4)&&ishexat(i+5))i+=5;break;elide(i,i+1);break;case'0':case'1':case'2':case'3':case'4':case'5':case'6':case'7':intoctalstart=i+1;intoctalend=octalstart;++octalend;if(octalend<end&&isoctat(octalend))++octalend;if(sch<='3'&&octalend<end&&isoctat(octalend))++octalend;intvalue=0;for(intj=octalstart;j<octalend;++j)chardigit=jsonish.charat(j);value=(value<<3)|(digit-'0');replace(octalstart,octalend,"u00");appendhex(value,2);i=octalend-1;break;default:elide(i,i+1);break;break;default:if(ch<0x20)elseif(ch<0xd800)continue;elseif(ch<0xe000)if(character.ishighsurrogate(ch)&&i+1<end&&character.islowsurrogate(jsonish.charat(i+1)))++i;continue;elseif(ch<=0xfffd)continue;replace(i,i+1,"\\u");for(intj=4;--j>=0;)sanitizedjson.append(hex_digits[(ch>>>(j<<2))&0xf]);break;if(!closed)insert(end,'"');